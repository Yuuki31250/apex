// Code generated by go-bindata.
// sources:
// autocomplete.md
// aws-credentials.md
// bindata.go
// build.md
// delete.md
// deploy.md
// docs.go
// docs.md
// dryrun.md
// env.md
// faq.md
// functions.md
// getting-started.md
// hooks.md
// ignore.md
// infra.md
// installation.md
// invoke.md
// java.md
// links.md
// list.md
// logs.md
// metrics.md
// projects.md
// rollback.md
// shim.md
// upgrade.md
// DO NOT EDIT!

package docs

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _autocompleteMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x4f\xdd\x4a\xc3\x30\x14\xbe\xcf\x53\x7c\x94\x81\xed\xc5\x44\x6f\x07\x03\x65\xea\x95\xb2\x31\x85\x21\x32\xd6\xd8\x9e\xae\x81\x34\x27\xe4\x07\x1d\xa3\xef\x6e\xe2\x60\xba\x8b\x36\x27\xf9\x7e\x8f\xb8\xb7\xf4\x0d\x1f\xad\x65\x17\x3c\x1a\x1e\x06\x69\x5a\xe4\xaf\x8b\xa6\x09\x8a\x0d\x8c\x1c\x08\x32\x06\x4e\xa8\xd5\x94\xdf\xae\xf1\xc6\x20\x23\x3f\x35\x21\xf4\xca\x9f\xc9\x52\xab\x70\xc0\x81\xe3\x95\xd6\x30\x44\x2d\x02\x43\xb6\xe9\xe8\x09\x1d\x6b\xcd\x5f\xca\xec\xe1\x7b\x4a\xb8\x6f\x9c\xb2\x21\x33\x92\xc0\xc1\x3a\xee\x54\x32\x64\x07\xaf\x06\xa5\xa5\x9b\x09\x51\xd7\xb5\xef\xc5\x4e\xa6\x9a\x65\x05\x1c\x05\xb0\x58\xbe\xac\xd6\x8f\xab\xe7\xf7\x79\x59\xa5\xab\xe6\x46\x6a\x34\xd1\xcd\x8b\xc9\x31\x63\xbb\xcd\x72\xfd\xf0\xfa\xf1\x3b\x2e\xf2\xbc\x1d\x8b\x33\x8f\x6d\xf0\x89\x58\x66\xc3\xff\x4b\x11\xa6\x53\x5c\xe8\xef\xb6\xb3\xdb\xb1\x2a\x2e\x03\x31\x29\xb3\x60\x4f\x06\xd3\x0d\x52\x60\xf6\x1b\x8b\x93\x38\x75\x18\x2b\xe4\x4e\x8e\x42\x74\x06\x37\x62\x14\xe2\x2f\xe0\x09\xbb\x53\x6c\xfa\xe5\xc5\xc4\x4f\x00\x00\x00\xff\xff\x08\xf9\x10\xea\x7e\x01\x00\x00")

func autocompleteMdBytes() ([]byte, error) {
	return bindataRead(
		_autocompleteMd,
		"autocomplete.md",
	)
}

func autocompleteMd() (*asset, error) {
	bytes, err := autocompleteMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "autocomplete.md", size: 382, mode: os.FileMode(420), modTime: time.Unix(1465517548, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _awsCredentialsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\x6f\x6f\xdb\x36\x13\x7f\xcf\x4f\x71\x70\x1f\xa0\x4f\x01\x5b\x06\xf6\x32\xd8\x06\x64\x9e\xb7\x7a\x2b\x9a\x22\xee\x36\x14\x41\x61\x5f\xa4\x93\xc5\x96\x22\x05\x92\xb2\xa2\x0e\xdb\x67\xdf\x91\x94\x6c\xd9\x0d\x86\x19\x09\x12\x93\x77\xbc\xe3\xef\xcf\x51\xfc\x40\xa5\xb1\x04\xad\x93\xfa\x00\xb7\x0d\x3d\x41\x6f\x5a\xd0\x44\x05\x78\x03\xa5\xb4\xce\xc3\x41\x1e\x09\xa4\x0f\x3b\x16\x30\xcf\x4d\xab\x3d\xe4\x96\x0a\xd2\x5e\xa2\x72\xe0\x0c\xf8\x0a\x7d\xca\xcf\x51\x43\x8d\x1a\x0f\x04\x96\x1c\xa7\xe4\xe4\x32\x78\x5f\x11\x97\xc1\xf0\x0b\xba\xad\x1f\xc9\x82\x29\xa1\xc3\xde\x85\x3a\x45\x3a\x60\x0e\x5d\x25\xf3\x2a\x86\x99\xd6\x2b\xa9\xb9\x8d\x90\x98\x09\xf1\xe2\x05\xfc\x2e\x11\x48\x1f\xa5\x35\xba\xe6\xd2\x70\x44\x2b\xf1\x51\x91\x13\xe2\xb7\xd8\xff\xb3\x9b\x60\xb4\xea\xe7\xf1\x5a\x75\xcb\xb7\x71\x0d\xe5\xb2\xec\xb9\x20\x41\x69\x94\x32\x1d\xa7\xde\x08\xb1\x80\xfd\xed\x1f\xdb\xdd\xed\x6a\xb5\xde\x6e\x77\xbf\xae\x3f\xec\x36\x3f\xee\x81\x97\x4e\x57\xe6\xbf\xe4\x1c\x7c\xa6\x7e\x0c\xde\xae\x57\xf7\xeb\xf7\x93\x9c\xcb\x04\x47\x8c\x92\x9f\x26\xdc\xaf\x7f\xde\xdc\xbd\x4d\x51\x96\x0e\xd2\x68\x21\x36\x65\x6c\xae\x42\x46\xb9\x6e\x95\x97\x8d\xa2\x18\xd0\x58\xf3\x89\x72\xef\x52\xef\xd8\x33\x5c\x7c\x28\xc3\x95\x1b\xed\x64\xc1\x10\x26\xda\x90\xd7\x8c\x02\xd7\x06\xe8\x1c\x3c\x14\xd2\x32\x12\x1f\xff\x5f\x79\xdf\xdc\x2c\x97\xe9\x6b\xa6\xc9\x2f\x5f\x85\x6c\x65\x72\x54\xf2\x0b\x33\xa1\x0b\xc0\xd6\x9b\x1a\xbd\xe4\x25\xd5\x73\xc3\x3e\xe2\x72\x06\xaf\xab\x48\x0b\xae\xff\x92\x29\xe9\x8c\xfd\x1c\xea\x19\xcd\x25\x87\xe6\xce\xcc\xfc\xbd\xcc\xb0\x73\x2c\x99\x09\x21\xe1\xac\xb4\xbe\x9c\xea\x25\x14\x1e\x97\x8d\x2e\xe5\x21\x65\x9d\xee\x39\x52\x14\x21\x7b\x77\x7f\xf7\xd3\xe6\xcd\x7a\x1f\x5a\xf7\xa4\x14\x60\x50\x59\x12\x8a\xd1\x14\x96\x2d\x95\x2c\x12\x9d\x53\x06\xaf\x4d\x47\x47\xb2\x73\x90\x09\x55\x56\x96\x36\x3e\x81\x8b\xcf\x14\x9d\x83\xb1\x30\x4b\x54\xcc\x40\xba\x18\x5d\x50\x19\xa4\x97\x44\xe3\x2a\xd3\xaa\x22\x42\xc3\x1e\xe8\xa4\xaf\xe2\xb5\x2e\xe8\x7c\x4e\x78\xac\xf9\xd0\x19\x16\x50\x07\x87\x31\x68\xa9\x6c\x6b\x07\x64\x1c\x0d\xd7\x3e\x4a\xea\xe0\x61\x75\xb9\x1b\x15\xb0\x7a\xb3\x39\xd3\x68\x72\x17\xba\xcf\xb0\xc6\x2f\x46\x67\xb9\xa9\x97\xb9\x92\x4b\x85\x9e\x9c\x5f\xb6\x8e\xec\xa1\x65\x55\x84\xc5\x45\x5e\x61\xb3\x38\x90\xf7\x7c\xda\xc2\x79\xb4\x9e\x8a\xac\xf2\xb5\x7a\xc5\x84\xbd\x66\xb0\x5e\x06\x16\x80\x9e\xb0\x0e\x6a\x63\x2b\x7e\x4d\x13\x7b\x62\xbf\xdf\x8b\x87\x21\xe8\xa3\xe0\xfd\x5d\xf2\xc0\x8e\x25\xbd\x93\x05\x7c\x07\x4f\xc3\x27\x6e\x26\xbd\x4f\x62\x26\x01\xd7\x9f\x78\xf6\xbf\xb7\x12\x01\x19\xbb\x60\xbd\x05\xb4\xe0\xd4\x0d\x0f\x88\xa6\xf5\x5c\xe1\x93\x63\x17\x25\x06\xf9\x5b\xeb\x16\x1d\xe3\xb1\xf8\x26\x15\x18\xc4\x39\x66\x97\x0a\x0f\x97\x8e\x7b\x34\x4c\xe8\x7f\xd2\xe8\xb5\x3a\x03\x49\xe3\xb9\xc1\x63\xb9\x67\x07\x45\x7d\xec\xa3\x44\x17\x8b\x71\xf7\x5b\x8d\x35\x7d\xbf\x8f\x66\x62\x8d\xb9\x36\x70\xcc\xfc\xf1\x98\x2c\xe2\x6c\x64\xdd\xd5\x84\xda\x7d\x25\x59\x16\xf7\x58\x0e\x75\xff\xfc\x80\x9b\x43\x95\x44\x7f\x9e\x71\x5c\xf8\xc8\x52\x38\x09\x96\x30\x98\xa5\x21\xcb\x4e\x37\x7a\x80\xf4\x7f\x70\xd5\x66\xdd\x63\xd3\x84\x6f\x05\x3b\xa0\x51\xa6\xbf\x86\x30\x18\xfe\xa4\xe2\x78\x94\x10\x1f\x46\x54\x7c\x50\xf9\x14\x93\x70\x69\x90\x7a\x5c\x8b\xd3\x22\x70\x15\x55\xcf\xad\x39\x52\x65\x98\x57\x6c\xb0\x4e\x8f\x81\xa7\x89\x0c\x4e\xcb\xa6\x21\x3f\xc0\x13\x7e\x0a\x42\x9e\x72\x92\x7d\x1e\x2e\x46\xda\xb5\xfc\xc0\xa4\x97\x67\x82\x1b\xab\x4f\x06\x16\xe3\x40\x1b\x7c\x5f\xc8\x32\x4e\x08\x7f\x81\x20\x5b\x3a\x8b\x50\x44\x05\xfd\x29\x00\x66\x43\xef\xb3\x1b\x98\x9d\xd1\x98\x89\xbf\x4e\x48\xbc\x63\x9e\x83\x48\x72\x12\xe2\xfc\x3f\xb7\x6d\x79\xae\x62\x31\x35\xef\x54\x4d\xd2\xc5\x17\xe6\x24\x43\x6b\xea\xa4\xc5\xab\xb5\x5f\xb6\x77\x6f\x07\x84\xaf\xb7\xb8\xf3\xc9\x8b\xb7\xb8\x80\xb9\x80\x19\xcf\x2c\xe4\xc7\x63\x26\xfe\x09\x00\x00\xff\xff\xf4\x05\xe0\x84\xd3\x07\x00\x00")

func awsCredentialsMdBytes() ([]byte, error) {
	return bindataRead(
		_awsCredentialsMd,
		"aws-credentials.md",
	)
}

func awsCredentialsMd() (*asset, error) {
	bytes, err := awsCredentialsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-credentials.md", size: 2003, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x5b\x8f\xd3\xc8\x12\x7e\x8e\x7f\x45\x13\x09\x94\x1c\x85\x8c\xef\x97\x48\xbc\x30\x70\x24\x1e\x00\xe9\x1c\xf6\x69\xb3\x42\xed\xee\x76\x30\x38\x76\xb0\x9d\x21\xc3\x88\xff\xbe\xf5\x75\xb5\xb3\x99\x01\x16\x69\xb5\x91\x1c\x77\x97\xeb\x5e\xd5\x5f\xf5\xd5\x95\xb8\xee\xb4\x11\x3b\xd3\x9a\x5e\x8e\x46\x8b\xf2\x56\xec\xba\xa7\x65\xdd\x6a\x39\xca\xb5\x47\x0c\x43\x77\xec\x95\x19\x36\x58\xcb\xe3\xd8\xa9\x6e\x7f\x68\xcc\x68\xd6\x7b\x6d\x49\x5f\x86\xa7\xaa\x37\xda\xb4\x63\x2d\x9b\xc1\x51\x27\x05\xbb\xce\xee\x8e\x75\xa3\xdd\x17\x6d\x2e\x84\xb5\x39\x34\xdd\xed\xb4\xe9\xd4\xe0\x04\xec\xd2\x51\xfb\xdb\xfe\xd8\xba\x8d\x69\x6f\xdc\xaa\x92\x9f\xa7\xd5\xb1\x55\x63\xdd\xb5\x93\xc0\xce\x8c\x63\xdd\xee\x9e\x0e\xa3\xec\x29\x22\x47\xfd\xd0\x75\x9f\x26\x8e\x7a\xd7\x76\xfd\xe4\x42\xdd\x56\xbd\x3c\xaf\x49\xa8\x69\x24\xd4\x9d\x49\x37\xdd\xa7\x89\xf7\xa3\xbc\x99\x58\x9b\xba\x3d\xeb\x6b\xea\x61\x9c\x96\xdd\x6e\xa2\xee\xcd\xd8\xd7\xe7\x30\x0e\x7d\xf7\xd1\xa8\x71\xda\xf6\x5d\xd3\x94\x52\x7d\x72\xdb\xe1\x43\xbd\x77\xcb\xe3\x61\xd7\x4b\x3d\x59\x7c\xf1\x56\xbc\x79\xfb\x4e\xbc\x7c\xf1\xea\xdd\x23\xcf\x3b\x90\x84\xdc\x19\x9b\x1e\xcf\xab\xf7\x87\xae\x1f\xc5\xc2\x9b\xcd\xcb\xdb\xd1\x0c\x73\x5a\xa0\x38\xbd\x19\x86\xab\xdd\xd7\xfa\x00\x42\xb5\x1f\xf1\xaa\x3b\xfe\xbf\xaa\xbb\xe3\x58\x37\xd8\x74\x56\xe0\x20\xc7\x0f\x57\x55\xdd\x18\x2c\x40\x18\xc8\xeb\x76\x67\xbf\x8d\xf5\xde\xcc\xbd\xa5\xe7\x21\xc5\x53\x49\xff\x67\xa4\x5e\x60\x21\x7e\xff\x03\x66\x57\xa2\x95\x7b\x23\x58\x6c\x29\x16\x13\xd5\xf4\x7d\xd7\x2f\xc5\x9d\x37\xdb\x7d\xb5\x3b\xb1\x79\x26\xe0\xd5\xfa\x8d\xf9\x02\x25\xa6\x5f\x58\xb7\xb1\x7f\x7e\xac\x2a\xda\x43\xed\x72\xe9\xcd\xea\xca\x0a\x3c\x7a\x26\xda\xba\x81\x8a\x59\x6f\xc6\x63\xdf\x62\xbb\x12\x14\xd2\xfa\x25\xb4\x57\x8b\x39\x14\x89\xc7\x9f\x37\xe2\xf1\xcd\x9c\x3d\xb1\xb6\x48\xc7\x37\xcf\x9b\xdd\xc8\x9e\x7a\xaf\x12\x6c\x87\x8d\x78\xb3\xf7\xec\xce\x33\x51\x77\xeb\xeb\xee\x70\xbb\x78\x42\x3c\x2b\xf2\x8d\xa4\x54\xf3\x72\xf2\x74\x7d\xdd\x74\x83\x59\x50\xf8\xff\x92\x3f\x50\xc3\xfa\x7f\xa2\x88\x18\xd9\x6f\x47\x24\xb7\xd6\xcf\xe1\xfa\x62\xb9\x02\x87\x47\xdf\xc6\xdb\x83\x11\x72\x18\xcc\x88\x94\x1f\xd5\x08\x2d\x36\x3e\x57\x0f\x32\xd3\x56\x9d\x10\xdd\xb0\xfe\x2f\x95\xf5\x15\x6d\xce\x72\xae\x84\x13\xfd\x42\x83\xad\x21\xfd\xb8\x8c\xde\x6c\xa8\xbf\xda\x7d\xdd\x8e\x69\xec\xcd\xf6\x00\x09\x71\x56\xfa\x9a\xb6\x96\xf8\x8e\x3a\x44\xa0\x4d\xd6\x58\xc1\x8e\x6d\x95\x45\x55\x3f\xb4\xb5\x14\x6f\xc8\xc4\x62\xe9\x2c\xc0\xa6\x8b\xb2\xaa\xd7\xb0\x4e\xc2\x3f\x97\xfd\x3f\xb9\x43\xb2\xd6\x9b\xfb\xa2\x70\xf4\x6f\x45\xe1\x2b\x89\x5e\x78\x7e\x5f\x01\x42\xfb\x95\x02\x04\x47\x3a\xce\x81\x7e\xa7\xc1\x45\xff\x73\x25\xaf\x86\x17\x75\x4f\x2a\xca\xae\x6b\x2e\xa5\x09\x31\x7f\x11\xf9\xed\xc0\x81\x9b\xbe\x92\xca\xdc\x7d\xbb\x90\x76\x2d\x81\x2e\x7f\x7f\x89\xcc\xaf\x35\x35\x37\x77\xc3\x62\xbe\x3d\x05\xd5\xf6\x94\x97\xdb\x93\x9f\xd3\xe3\xbb\xa7\xd8\x9e\x52\x43\x74\x47\xab\x88\x27\x89\xb7\xa7\x98\xde\x5a\xd3\x5b\x6e\x4f\x2a\xda\x9e\x22\xfa\x16\x10\xbd\x24\x5e\x05\x1e\xa2\x65\x6a\x7b\x2a\x88\x96\x07\xdb\x93\x21\x5e\x95\x10\x3f\xed\x53\xfa\xee\x67\xf4\x10\x4f\x4a\x34\x43\x3a\x0a\x7a\x97\x21\xe9\x21\xde\x9c\xd6\x21\xbd\x23\xda\xeb\x94\x1e\xb2\x5d\x90\x5e\x69\x58\x57\x44\x3a\x42\x92\x37\x31\xeb\x09\x48\xb7\x24\x5d\xa6\x62\x5f\x0d\xc9\xa5\xe4\x4f\x29\x39\x9e\x28\x65\xfe\x8a\x62\xc9\xa0\x83\xf8\x4a\xd2\x59\x82\x06\x1d\x9a\x63\x97\x9a\xfd\x09\x88\x1e\x91\xef\x01\xc9\x07\xc4\xef\x93\x7c\x4a\xb2\x89\x64\x9b\xd2\xe5\x49\xa6\x9c\x9f\x5c\xb2\x8e\x1c\x32\x8a\xf3\x07\xdf\x21\x17\xc3\x6f\xda\xeb\x84\x73\xa1\x2b\x8e\xa3\xa2\x38\x14\xfc\x22\x3f\x43\xe4\x8f\xe8\x91\x8b\x1b\x3e\x29\xe4\x84\x68\x0a\x76\x49\x97\x24\x7b\x19\xf1\x2a\xdf\xe5\x33\xe2\x9c\x21\x3f\xc8\x3d\xf2\x1a\x92\x0f\x3e\xf1\xc6\xf4\xad\x24\xba\x21\x59\x93\xb3\x8f\xc8\x51\x4a\x3a\x14\xbd\x93\x8a\xf5\x1b\xf2\xd5\x90\xae\xac\xe4\x3a\x22\x27\xa8\x4d\xa1\xb8\x16\xb6\x06\xb0\x13\xb2\x5d\x85\x3d\xe4\x0c\xf7\x00\x62\x4c\x5d\x0d\x90\x13\xc4\x2b\x13\x7e\x8a\x92\xed\x26\x24\xa3\xe9\x7b\x99\x70\x7d\x6c\x0f\x18\xce\x5d\x21\x39\xdf\x7e\xe2\xf2\x86\x1e\x20\x3b\x49\xce\x7d\x24\x15\xc7\x87\x7a\x21\x7e\x83\x7a\xd1\x93\x41\x6f\xe1\x6c\x81\x8e\x3c\xa3\x46\x92\x7b\x43\x07\x1c\x27\x6a\x84\xfc\xa1\xa7\x52\xe4\xc4\xc5\x9f\x91\xdf\x15\xbd\x2b\xf4\xb3\xe4\x5a\x44\xf4\x2d\x44\x5d\xe8\x5b\xa9\x38\x5f\xb6\x77\x22\xb6\x9f\x3a\xfe\xbc\x60\xff\xd2\x94\xfb\x1e\xe7\x21\x26\xbe\x20\xe0\x98\xd0\xf7\x89\xe2\xbc\x23\x5e\xd4\xa1\x24\x9a\x26\x9e\x92\x78\x42\xc9\x76\xd0\xfb\xf0\x2b\x2c\xf8\x3b\xfa\x35\x76\x39\xd4\x11\xf7\x53\xe2\xfa\xb8\x22\x5a\x50\xb2\x3f\x05\xe4\x48\x77\x86\x9c\xd1\x3b\x2c\xb9\x27\x91\xd3\x9c\x9e\x98\x64\xb2\x98\xf5\x44\x94\xab\x34\xe4\x73\x89\x33\x11\x92\x7e\xe3\xce\x34\x72\x01\x5f\x53\xc5\x39\x30\x09\xd7\x46\xb9\xb3\x7d\x3e\xff\xee\xcc\xe3\x41\x5f\xe3\x0c\x05\x3e\x9f\x59\x9c\x25\x3f\x98\xf8\xe6\xd3\xfc\xbf\x8f\x30\x6e\x2e\xfd\x68\xde\x4f\xd3\xeb\xe2\xbe\x40\x83\xee\x01\x42\xad\x88\x34\x7f\x70\x9d\x9c\x13\x71\x79\x1e\x22\xf7\xf9\x61\xea\x3f\x76\xee\x5d\x9a\xb2\x83\xef\x7c\xbb\xf8\xa1\x87\xbf\x9a\xde\xe7\xa1\x6b\xc7\x26\x69\x79\x00\xc1\x77\x18\x4e\x1b\xf1\xbd\xaf\x02\xa3\x67\x23\xa2\x3c\x5c\x09\x0c\x91\xcd\xe5\x8c\x59\xc4\xa1\xbf\xb4\x74\x8c\x86\x0d\x8f\x8e\xdf\xda\xfa\xb4\x08\xe2\x34\x49\x82\x2c\x89\xf3\x95\xf0\x97\x74\x2b\x90\x30\xfa\xc4\x86\x76\x67\xe3\xd9\x08\x17\x16\x3c\xda\xd8\xff\x6f\xe7\xac\xca\xd5\x7d\xd8\xff\x32\x5c\xff\x75\xf9\xfe\x87\xc0\x0f\x80\x4b\x12\x06\x09\x3c\xda\x81\x6b\x00\xb0\xaf\x18\xf8\xd1\x3c\x59\xc0\x60\x65\x41\x75\x6a\x6c\xa2\x25\x25\x37\x26\x1a\xda\x82\x7b\xee\xc0\x35\x66\x80\x07\x20\x67\x92\x9b\x1a\xe0\x10\x86\x0c\x36\xd6\x06\x1a\x13\x07\x39\x60\x00\x93\x31\x1f\x06\x34\x6d\x91\x32\x2f\x00\x04\x60\x05\xf0\x92\xd8\x1b\xf6\x31\xcd\x18\x78\x8b\x80\x41\x18\x4d\xaf\x0b\x07\xda\xd0\x5d\x38\x90\x0c\x59\x67\x96\x31\x08\x18\x37\x54\xec\x40\x03\x30\x13\x2d\xf6\x19\x78\x70\x98\xfd\x98\x87\x06\x64\x70\x88\x90\x27\xc4\x00\xbd\x91\x76\xfe\x56\x3c\x38\xb4\x03\x69\xf8\x98\xe5\x0c\x00\x56\x0f\xc0\xde\x30\x98\x80\xdf\x0e\x9c\x82\xe3\xf3\x2b\x06\xa6\xc0\x81\xbc\xcd\xaf\x66\xd0\x83\x7e\x1c\x7c\xc4\xee\x43\x3f\xf9\x9e\x18\x8e\x1b\x00\x67\x0f\x3a\x0e\x77\xce\xdf\x33\xcd\xa0\x3f\xc5\x82\x21\x91\x6b\x1e\x72\xb0\xe3\x3b\x5d\x00\x62\xe9\x86\xab\x71\x20\x0f\x7f\x91\x73\x80\x5c\x91\xf1\x20\x00\x18\xfa\x25\x0f\x59\xe9\x06\x28\xc0\x36\x0f\x19\xd4\x64\xc0\x31\x69\xc3\x03\x1d\x83\x23\x76\x6f\x80\x1a\x6a\x93\x90\x5c\x48\xb4\x2a\x62\x60\x44\x2d\x8a\x82\x41\x1f\x3d\x20\x01\x54\x05\xfb\x59\x90\x4c\xe1\x86\x19\x00\xdb\xb8\x7a\xa3\x26\x00\x54\xf8\x16\xe7\xae\xe7\x12\x1e\xa6\xf0\x0d\xc3\x01\xb9\xc9\xa6\x21\x59\xb2\x3c\x72\x80\x7e\x40\xef\x42\x17\xea\x86\x7e\x44\x9f\x03\x90\x31\xc0\xec\x25\x22\x66\xb0\xb3\xc3\x27\xe0\x5a\x02\x7c\x55\xe9\xfa\x35\xe0\x7a\x1b\x77\x81\xc1\x50\x85\xcf\x18\xec\xb6\xfe\x05\xf7\x1c\xf2\x68\x2f\x2a\x19\xe7\x04\x67\x0d\x3d\x94\xfb\x3c\x8c\x8c\xcb\x21\xfa\x55\xbb\x3d\x06\x1a\x06\x27\xf8\x71\x16\x6d\x5f\xba\x0b\x04\x2e\x0c\xb0\x85\xb3\x61\xd7\xee\x72\x84\xfa\x60\x18\x24\x19\xc7\x0e\x7e\xd4\x11\x75\xc5\x85\x0c\x43\xca\x02\xb7\x62\xbd\xd2\xf1\x62\xb0\x9a\x92\xdf\xe8\x67\x5c\x02\x10\x23\xfa\x22\xce\xfe\x0c\x00\x00\xff\xff\xde\x7a\x84\x54\x00\x10\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1473096526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _buildMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\xb1\x4e\xc3\x30\x18\x84\x77\x3f\xc5\x49\x45\x62\x41\x7d\x00\x06\x24\x24\x98\x3b\x10\xf6\x38\xf1\x25\xb1\x64\xfb\xb7\x62\xff\x34\xe1\xe9\x71\x23\xaa\x6e\x37\xdc\x7d\xdf\x99\xf7\xcc\x0d\x33\x13\x57\x5b\x59\x60\xf1\xeb\x33\x26\x1f\x88\x49\x56\xec\xa2\xd0\x2c\x09\x8e\x39\xc8\xfe\x82\x45\xae\xfc\xe1\x8a\x22\x91\xd5\xc7\xb6\xf0\x15\xa3\x4d\x18\x08\x2d\x9c\x34\xa0\x0a\x0a\x09\x6e\x76\xac\x61\xc7\x75\xb1\xf5\xb9\xd5\xd2\x18\xd4\xd1\xb5\x80\xba\xf8\xf2\x70\x38\x0e\x3a\xcf\x3e\xcd\xc8\xba\x66\x29\x2c\x67\x74\x0b\xd1\xdb\xdb\xb5\x41\x7d\x70\x3d\x46\x89\xd1\x26\x07\xd1\x9a\xb5\x96\x86\xe0\xf1\xb4\xc9\xbe\xba\x8f\xcb\x77\x77\xa0\x0e\xf0\x3f\xe5\x6c\xcc\xe9\x84\xcf\xcd\xc6\x1c\x58\x8c\xb9\x1c\xcb\xfb\xa8\x71\xce\x2d\xbe\x1a\xd3\xf7\x7d\x59\xcc\x13\x1e\xb6\x86\x12\xbc\xdd\x2b\xb7\x82\xf9\x0b\x00\x00\xff\xff\xda\x69\xc7\xac\x27\x01\x00\x00")

func buildMdBytes() ([]byte, error) {
	return bindataRead(
		_buildMd,
		"build.md",
	)
}

func buildMd() (*asset, error) {
	bytes, err := buildMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "build.md", size: 295, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deleteMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x31\x4f\xc3\x30\x14\x84\x77\xff\x8a\x53\xcb\x00\xa8\x29\x7b\x17\x54\x09\xf8\x05\x30\xb0\xc5\x49\x9f\x6b\x4b\x4e\x5e\xe4\xe7\x34\x0d\xbf\x1e\xdb\xa9\x0a\x43\x91\x98\x3c\xf8\xdd\xdd\x77\xa7\xf6\x03\x9d\xa1\xbd\xe7\x49\x30\xf3\x88\xc8\x38\x90\xa7\x48\x30\x63\xdf\x46\xc7\xbd\x6c\x60\x79\xa2\x13\x05\xb8\x88\xc9\x79\x8f\x21\x70\x37\x44\x34\x73\xba\x35\x7a\xf4\x71\x8b\x0f\x21\x44\x4b\xa8\x2b\xb3\x41\x55\x19\x0e\x2d\xd5\x30\x5e\x1f\xb3\x25\x27\x75\x70\x87\x7c\xe2\x04\x0d\x59\x7d\x72\x3c\x86\x2d\x3e\x53\x64\xa7\x67\x0c\x5a\x04\x5f\x14\xd2\x69\x40\xc7\xe1\x27\x1e\xbd\xee\x48\xb6\x4a\xad\xd7\x78\x3d\xeb\x6e\xf0\x24\x4a\xbd\x2c\x8c\x09\x3c\x11\x45\x7b\x21\xda\x29\x55\xd7\xb5\x58\x75\x07\x9d\x7b\x2d\x4d\xd4\x7b\xe2\x32\x9c\x3b\xba\xfe\xb8\x34\x68\xe8\xf2\x79\x48\x1a\xa0\x42\xa3\x43\x79\x0d\xb3\x52\xfb\x94\x9f\xc7\x90\x31\xd0\x33\xee\x67\x92\xa7\x9e\x1f\x76\xd9\x5c\xa9\xb7\x44\x78\x99\x88\x4d\x21\xb8\x2e\x75\x3b\x1f\x95\xb9\xa5\x94\x81\x5a\x67\x5c\xfb\x0f\x79\xa6\x2a\x84\xc5\xe6\x57\xf7\xab\x14\x93\x75\xad\x2d\x5b\x41\xa2\x0e\x51\x96\x5d\x56\x7a\x8c\x76\xf5\x87\x71\xfe\x7b\x2c\x9e\xdf\x01\x00\x00\xff\xff\x26\xfa\x24\xd5\x07\x02\x00\x00")

func deleteMdBytes() ([]byte, error) {
	return bindataRead(
		_deleteMd,
		"delete.md",
	)
}

func deleteMd() (*asset, error) {
	bytes, err := deleteMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "delete.md", size: 519, mode: os.FileMode(420), modTime: time.Unix(1462580160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x93\x4f\x6f\x13\x31\x10\xc5\xef\xfe\x14\xa3\x14\x09\xa9\x4a\xd3\x3b\x9c\x22\xe0\x80\x84\xb8\x80\x84\x38\xb1\xb3\xf6\x6c\xd6\xd4\xf6\x58\xfe\x93\x64\x2f\x7c\x76\xc6\x9b\x7f\x6d\x95\xe6\xb8\xf6\xbc\xdf\xcc\xbc\xe7\x55\x3f\x19\x0c\x45\xc7\x13\x70\x20\xe0\x04\x9e\x13\xc1\x50\x83\x2e\x96\x43\x06\x74\x0e\x26\xae\x10\x88\x0c\x14\x29\x66\xb0\x19\x52\x0d\xd0\x61\xa4\xfd\x51\xdc\xad\x60\x7d\xf9\x12\x95\x30\xac\x21\x1f\xb9\x50\x28\x1f\x01\xa1\xaf\xd6\x99\x26\xd5\x89\xb0\x90\x51\x83\xf4\x22\xd4\xe3\xb9\xd7\x12\x30\x98\x03\x26\x52\x92\x6b\x2f\x1c\xd0\x23\xe9\xa7\x5c\x7d\xeb\x9d\x49\xa8\x03\x94\x91\x8e\x8d\x64\xa4\x93\x1a\x3c\x16\xa9\xcd\xf3\xad\x63\x8d\xee\xd0\x72\xd9\x14\x99\x95\x2d\xef\x33\x04\x2e\x67\xe5\x4a\xa9\xf5\x50\x28\x9d\xd6\x9f\x1b\xef\xac\xac\xab\x1d\x61\xa8\x11\xd8\x5d\xf0\x22\xde\x52\xca\xb3\x25\xb9\x88\x45\x46\xfc\x82\xf5\xaf\x1f\xf0\x0d\x7d\x6f\x10\x44\xb3\xb5\x61\x23\xa7\x6e\x82\x81\x76\x2b\xf8\x5e\x7d\x2f\x78\x1e\x20\x51\x41\x1b\x44\x72\x42\x28\x8d\x01\x7a\x82\x1c\x49\xdb\xc1\xca\x8d\x0d\x10\x13\xff\x25\x5d\x5a\x06\xe7\xa5\x34\x87\xc1\x6e\x6a\xc2\xf6\x25\x13\x7f\x1d\xe6\x30\x62\xa2\x41\xd0\x62\x89\x40\x68\x1f\x9d\xd5\xb6\xcc\x37\x0d\x1c\x31\xe7\xab\x69\x42\x40\xdf\x1c\xe2\xd7\xd9\xfd\x16\xa5\xc7\x49\xc2\xce\x7c\x32\x1f\xf2\x48\xce\x3d\xe4\x32\x39\x82\x8d\xe3\xbe\x6f\xeb\x9d\x5c\xde\xd9\x32\x4a\x5e\x93\x4c\xe8\x7d\xcb\x0d\xb5\xa6\x58\x5a\xc9\xcb\x6e\x4b\xc8\x55\x42\xc6\x0c\xdd\xb1\xdd\x12\x3a\xc7\x9b\xdc\x1d\xf2\xee\x12\x3b\xd7\xa3\x7e\xea\x64\xbd\xbb\x3b\xf8\xb2\x47\x1f\x1d\x65\xa5\x3e\x1f\x72\x69\x0f\xf0\xf2\x1c\xc5\xa7\x16\xb0\xae\x29\xc9\xc3\x02\x63\x93\x58\xc6\x69\xfa\xa0\x54\xd7\x75\x79\x54\xef\xe0\xd9\x6a\xed\xec\x36\xe8\x0c\x80\xc5\xbf\x47\x43\xdb\x47\x3f\x61\x8c\x8b\xeb\x38\x78\xf8\x04\xcf\xaa\x5e\xd0\x8f\x51\xea\x4b\x8b\x37\x18\x58\xcb\xb5\x23\x39\xb0\x37\xc6\xdd\x8d\x56\x5c\x6c\x8e\xca\xf3\xc3\x54\x8e\x09\x2c\x9a\xf4\xad\x69\xdb\xdd\xfd\x0d\x26\x05\xd3\xf2\x3a\x80\xfe\x24\x8a\x9c\xe4\x7f\x58\xac\xae\xd3\xee\xcf\x15\x33\xf2\x7f\x00\x00\x00\xff\xff\xb8\xc3\xcc\xcc\x39\x04\x00\x00")

func deployMdBytes() ([]byte, error) {
	return bindataRead(
		_deployMd,
		"deploy.md",
	)
}

func deployMd() (*asset, error) {
	bytes, err := deployMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy.md", size: 1081, mode: os.FileMode(420), modTime: time.Unix(1462580160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x57\xdf\x6f\xdb\x36\x10\x7e\x8e\xff\x8a\xab\x8b\x16\x52\x6b\x2b\xed\x8a\x61\x40\x80\x3c\x24\xdd\xd2\x06\xe8\xaf\x35\xed\x3a\xa0\x19\x56\x5a\x3a\xc9\x9c\x25\x52\x23\x29\xbb\x41\x91\xff\x7d\x77\x14\x2d\xc9\x96\xd3\x0d\xeb\x83\x43\x1f\xbf\xbb\xfb\x78\xfc\xee\xe8\x1e\x1f\x17\xfa\xa4\x40\x85\x46\x38\x84\x42\xcf\x17\x52\x65\xc2\x09\x98\xd7\xab\x02\x32\x9d\x5a\x48\x26\x93\xe3\x63\x78\x27\xd2\x95\x28\xb0\x35\xe9\xc6\xd5\x8d\xb3\x90\xea\x52\x1b\xcc\xa0\x12\x66\x95\xe9\x8d\x82\x5c\x1b\x10\x50\xc8\x35\x2a\x70\xba\x96\x69\x32\xa9\x07\x8e\x93\x89\xac\x6a\x6d\x1c\x44\x93\xa3\xe9\xe2\xc6\xa1\x9d\xd2\x22\xaf\x1c\xff\x91\x9a\x3f\xad\x33\x52\x15\x64\xa7\x75\x21\xdd\xb2\x59\x24\xa9\xae\x88\x65\x29\x54\x31\xa7\x65\xa5\x15\xa7\x3b\xde\xe6\x9c\xee\x02\x2b\xe9\xd2\x25\x96\xe5\x92\x5c\xe6\x1b\x6d\xb2\x8d\x11\xf5\x7e\x34\x51\xe3\xd7\xf6\xc3\x9f\x80\xb2\xc5\xfe\x90\x35\x13\xd5\x39\x73\x6d\x2a\x54\x4e\x38\xa9\x55\x32\x71\x37\x35\xb6\x7b\xc4\xae\x49\x1d\x7c\x9b\x1c\xbd\x11\x95\xff\x4a\x64\x27\x47\x17\xb2\xec\xbe\xdc\x76\x91\x2c\x2c\x6e\x80\x18\xa0\x49\x26\x6b\x61\x82\xed\x14\x3e\xff\xc1\x2b\x8a\xf1\x6d\x7a\xa9\xac\x13\x65\xe9\xf3\x4c\x67\x30\x95\x83\xef\x49\x95\x4d\x6f\x67\x8c\x3a\xfb\x74\x05\x29\xd5\x99\x18\x49\x51\x5a\x06\x8a\x8d\x9d\x0f\x4c\x3d\xf6\x05\x3a\x47\x34\x88\x8d\x30\x0e\x33\xc6\x16\xad\x69\x1e\x4c\x3d\xf6\xca\x9f\xa6\x61\xda\x50\x1b\xfd\x17\xa6\xce\x07\xdf\xae\x0f\x23\xf3\x46\xa5\xcc\xcf\x43\xbb\x2f\x3d\xf6\x67\xac\x4b\x7d\x33\x42\x66\xde\xdc\xc3\x2e\xd5\x5a\xaf\x46\x28\xc9\x56\xec\x51\xaf\xa4\x75\x23\x50\x49\xc6\x61\xbe\x12\xc7\x98\x8c\xad\x83\x40\xe7\x8d\x2c\xb3\x11\x6a\xc1\xd6\x1e\xf4\x5e\x97\x25\x63\x16\xa4\x59\x58\xa3\xb1\x5b\x9c\xa1\x0d\x36\xf6\xd0\x8b\x10\x06\x96\x5a\xaf\x3c\xc6\x2f\x7a\xc0\x6f\x12\x37\x1c\xab\xd4\x45\xe8\x17\x4f\x5d\x17\x07\x30\x15\x92\x76\x52\x1f\x25\x2c\x7b\xcc\x6b\xa1\x44\xc1\x20\xa9\x72\x23\x6c\xb8\x08\x6c\x8b\x45\x96\x1e\xf9\xce\xe0\x3a\x04\xdc\x90\xd6\x21\x33\x37\x73\xd3\x78\x5d\xd1\x92\x56\x3d\xf4\x17\xb5\x96\x86\x1a\x89\xe4\x03\x24\x4d\x29\x16\x25\xfa\xf4\xa8\xd6\x3d\xea\x2d\x35\x53\x5b\x59\x19\xb6\x65\xa1\xa8\xe1\x7b\xc4\x47\x45\xea\x26\x5d\x29\x5f\x5a\xb7\xa4\x2e\x58\xca\x8a\x91\xfc\x77\x7c\xd0\x9d\xc6\xf2\xc4\xf4\xf0\xac\x1f\xeb\xc2\x08\x1f\xea\x8c\x9a\x93\xf7\x1b\x6f\x19\x64\xbc\x38\xfb\xd5\xeb\x4e\xfc\x3d\x14\x89\x5a\x05\x61\xa8\xee\x0a\xda\x3e\x7c\x8f\xe4\x6d\xc0\x20\xd5\x4c\x59\xa0\xde\xda\xe5\x00\x82\x8c\x60\x29\x65\xd9\xb6\x78\x32\x61\x81\x04\xbf\x28\x06\xa9\x93\x10\x83\x1a\x96\xbb\x58\x2a\xf0\x93\x2b\x39\x6f\xf2\x1c\x0d\x4d\x16\x1e\x7a\x7f\xce\xda\x01\x71\x72\x0a\x86\x06\x15\x86\x66\x27\x9f\x23\xa9\x92\x4f\x46\x3a\xbc\xf2\xf3\x21\xa2\x69\x97\x5c\xd5\xb4\x74\x79\x34\xbd\x56\xf7\xe1\x81\xbd\xe6\x52\xf8\xe4\x3c\x55\xe2\x78\xe0\x14\xbd\x6e\xac\x3b\xb3\x16\x5d\xe4\x01\x3c\x69\x18\x40\xa7\x3b\xaa\x32\x4e\xb7\x9d\x83\xc9\x1b\xdc\x44\xdd\x97\xdf\x5f\x7e\x78\xfd\xea\xad\x97\x5d\x44\x92\xc1\x78\x36\x00\xea\x9c\xe4\xac\x37\xed\x06\x05\x5b\x73\x9c\x87\x06\xf9\x32\xd1\x7c\xbb\x9d\x1c\x59\xb6\xac\x93\xb5\xb4\xd2\x45\x55\x96\xbc\x13\xc6\x62\x44\xa4\xce\xf9\xe8\x51\xcc\x5e\x6d\x4d\xc3\xd8\xb3\x9c\x3e\x14\xcd\xc6\xa1\xf8\xf4\x94\xb0\xc0\x5a\x04\xbc\x01\x27\x2b\xaa\x5b\x5b\xe0\x76\x2f\xb2\x61\x77\x06\x8a\x4c\x2e\xde\x82\xa9\x70\x92\x39\x6c\xa3\xbf\xc7\x1a\x85\x8b\xa6\x00\x54\x2a\xd5\x67\x97\xf0\x78\x88\x29\x45\x8a\x91\x25\x25\xf8\x92\xf2\xe7\x63\x39\x83\xf9\xd3\x2d\xa3\xed\x19\xfd\x43\xe5\xd0\x54\x52\x89\x32\xb4\x67\x98\xf3\x1d\xa4\x9f\xf5\x52\xd1\xf9\x05\x09\xb1\x5e\xc2\x42\xeb\x92\x2d\x3c\x98\xc0\xff\xeb\x2d\x6a\xd5\x5a\x76\x5e\x02\x5f\x43\xf8\xe2\x68\xac\x29\xfb\x25\x9c\x3e\x32\xf0\x68\x9b\x28\x6e\x21\x51\x8b\xa0\xd7\xa1\xbb\xa8\x0f\x6c\x89\xa1\x2b\x52\xcc\x64\x82\xda\x5c\x2f\xb5\xe0\xc8\x5a\xb3\xf0\x98\xac\xed\xbd\x79\xef\xc8\x79\xb1\x84\x72\xf5\x94\xda\x5d\xa2\xf5\x1d\x46\x21\x00\xec\xf3\xe9\xaf\xc8\x6e\xf8\xb5\x05\x97\x44\x5c\x3a\x4f\x2f\x15\x16\xe1\x51\xe7\xd2\x15\xee\x6d\x8d\xea\x84\x18\x9a\x64\x58\xcd\x53\x60\x0d\xb2\xb9\xbd\xce\xe9\xf4\xee\x08\xcf\x4b\x6d\xf1\x50\x88\x9c\x1e\xc0\x61\x8c\x6b\x35\x8e\xf2\x5c\x67\x78\x5e\xea\x74\x75\xd2\x03\xf7\x3a\x31\xf4\x61\x10\x26\x9d\xe9\x80\x77\x4c\x4b\xe5\x68\x7f\x06\x3f\x70\x0f\xec\x65\xb9\x40\x95\xe2\xff\xca\xe0\x3d\xff\x25\xfa\x4b\xf4\xb3\x71\x5b\x49\xc5\x0a\xd8\x09\x32\x00\xc4\xc9\xcb\x57\xb8\xc6\xf2\x4e\x2e\x40\x73\x07\xae\x9f\x3c\x7b\xf6\xf9\x41\xc6\x03\x7b\xbf\xd1\xee\xfb\x3e\x9b\xb5\x3f\xf1\x68\xd8\x95\x34\x2a\xee\x62\xd4\xdf\x4c\x77\x03\x3e\xf2\x93\xea\xd0\x55\xd0\x1c\xd4\xfd\x29\x3a\x17\x76\x78\x5a\xdd\x05\x1f\xa7\x68\x13\x8c\xf1\xe7\x4d\x49\x2f\x3f\xb7\xe7\x50\x72\xbe\x5d\x47\x6a\x3b\x44\xaf\xf7\xdf\x11\x5c\x08\xf0\x5f\xb4\xc6\xd0\x4b\x87\xd5\xfe\x11\x01\xe6\x70\x08\xad\x56\xbb\x4c\x69\x8c\xec\x5d\xec\x16\x43\xb7\x6a\x30\xff\x6e\xbb\xb0\x54\x2f\x15\x3d\x84\x9e\xb9\x1d\x69\xa4\xdf\xef\xd4\x76\x97\x46\x82\x38\x48\xb5\xa1\xd6\x9d\x1a\x5e\x18\x71\x43\x92\x19\x0b\xe2\x03\x7e\x75\x87\xf3\xf2\x4e\x9f\x91\x5f\xb8\x1c\xba\xe3\xde\x3b\xa5\xa3\xf8\x01\x76\xc4\x3f\x90\x77\x68\x90\x4c\xa3\x07\x36\x66\x89\xce\x3a\x0f\x7e\x22\x87\xd5\xe2\x42\xf8\x37\xb1\x7b\x95\x46\xd4\xf6\x8a\x12\x86\xe4\x6e\x17\x76\x85\x59\xd2\xcf\x42\x9a\x86\xf1\x80\x68\x3f\x71\x1e\x3e\x84\x7b\x9d\x24\x3a\xd2\xa1\xab\xb7\xff\xe5\xa0\xe7\x5b\xd4\xe1\xc9\x27\xe2\x3f\xfd\x48\xbd\xf4\x34\x1e\xb3\xcc\x30\x17\x4d\xe9\x4e\x76\x2f\xf5\x96\x26\xf5\x3f\x01\x00\x00\xff\xff\x79\x87\x97\xf7\x9b\x0d\x00\x00")

func docsGoBytes() ([]byte, error) {
	return bindataRead(
		_docsGo,
		"docs.go",
	)
}

func docsGo() (*asset, error) {
	bytes, err := docsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.go", size: 3483, mode: os.FileMode(420), modTime: time.Unix(1465926397, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8f\x51\x6e\xc3\x20\x10\x44\xff\x39\xc5\x48\xf9\x69\xa5\x36\x55\xaf\xd0\x33\xf8\x00\x20\x58\xc7\x28\x86\x25\x0b\xd4\xf6\xed\x0b\xb4\x75\x24\x7f\xd8\xcf\x33\x3b\x33\x6a\x5a\x08\xda\x24\xda\xe1\xd8\x66\x0d\xcb\x21\x98\xe8\xb0\x52\xc9\x38\xb8\x42\xc8\x38\x94\xc5\xe7\x2e\xa8\x81\x62\x31\xc5\x73\xc4\x2c\x1c\x1a\xa7\xa7\xc3\x47\xba\xe2\xeb\x80\xa3\xd9\xd4\xb5\xc0\xb7\x27\x23\xf9\x44\x0e\x3e\x16\x1e\x6a\xbd\x52\xce\x2f\x9f\xaf\x1a\xc9\xdc\x48\x90\x3b\x36\x65\x44\x59\x13\x91\x48\x66\x96\x00\x6e\x2f\x23\x28\xb7\xc3\x77\x42\xb6\xc2\x6b\x8b\xb8\x81\x9b\x89\x8c\xd8\xa5\x7f\x9c\x2d\x0a\x49\xf0\xd1\xac\x57\xa5\x2e\x17\x4c\x3e\x65\xa5\xde\x31\x1d\xa9\x45\x7e\x68\xf4\x82\xbf\x2e\x18\xdc\xe9\xd8\x58\xdc\xdb\xa0\x49\x5a\x21\xb4\x59\xad\x4c\xeb\xf8\x27\xea\x27\xff\xf7\x9e\x77\xa2\xee\x8a\x6f\x4f\xdb\xf8\x1f\x69\x2f\x60\x6b\xab\x08\x45\x4b\xe0\xb9\xaf\x10\x3c\x2a\xc9\x71\x9a\xea\x30\xf5\xb1\xa8\xe9\xa4\xee\x49\x1d\x6f\xf1\xe4\x8f\xc1\x69\xf7\x45\xfd\x04\x00\x00\xff\xff\xf3\x5e\xe3\x49\x9b\x01\x00\x00")

func docsMdBytes() ([]byte, error) {
	return bindataRead(
		_docsMd,
		"docs.md",
	)
}

func docsMd() (*asset, error) {
	bytes, err := docsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs.md", size: 411, mode: os.FileMode(420), modTime: time.Unix(1456962277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dryrunMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6b\xdc\x30\x10\xbd\xeb\x57\x0c\x4e\x20\x2d\x89\x43\x13\x08\x94\x2d\x14\x16\x9a\x42\xa1\xf4\x92\x40\x8f\xb1\x62\x8f\xd7\x4a\x65\xc9\x95\xe4\xf5\xfa\x92\xdf\xde\x27\xd9\xd9\x7c\x6d\xd3\x36\x3d\xec\xc1\x9a\xd1\x9b\x37\xef\x8d\x66\xc5\xb2\xe3\x0d\x69\x0e\x9e\x46\xdb\x53\xc7\xae\xb6\xae\x25\x49\x59\xe5\x46\x72\xbd\xc9\xc8\xd6\x24\xcd\x48\x16\x31\x19\x94\x35\x34\xa8\xd0\x50\x68\x98\x8a\x3c\x47\x56\x8e\xac\x82\x6a\x2d\x57\x47\x48\xac\xc8\x58\xaa\xd8\x07\xd7\x97\x41\xad\x99\x96\xdf\x2f\xa8\x6c\xa4\x59\xb1\xc7\x4d\xad\xe9\x9a\xa9\x95\x15\x1f\x0b\xb1\xb7\x47\xdf\x6c\x48\xa0\x42\x7c\x9a\xea\x79\xea\x3d\x27\xf4\xda\x6a\x6d\x07\x65\x56\xe4\xc7\xf6\xda\x6a\xbf\x10\x22\xa7\xe2\xb0\x20\xc7\xde\xf6\xae\xe4\x2d\x5e\xe9\x58\x06\xae\x62\x38\xdf\x11\x76\xdc\xda\xf5\x14\xbe\xdd\x11\xee\xbb\x2a\xdd\x8e\x7c\xce\x37\xb2\xed\x34\x7b\x21\x3e\x5b\x47\x3c\x7d\x91\xaa\x93\x3a\x8d\x5c\xcf\xd4\x7a\x53\x46\xd6\x9e\xb2\xda\xda\x2c\xb5\x9d\x5d\x4b\x97\xd1\xd0\xa8\xb2\x99\x12\x0d\xaf\xd9\x01\x9f\x0d\xf4\xe8\xb4\x1d\xb9\x3a\x8a\x30\x07\xa8\xea\xf9\x69\x8f\xb6\x0f\x5d\x1f\x8e\xe9\xb2\x51\x7e\xfe\x00\xd3\x0e\x64\xd9\xc0\x9c\x94\xac\x8c\xd4\x38\xfc\xd9\x43\x5e\x9f\x44\xa4\x60\xa3\xc0\x1f\x20\x7a\x50\x68\xa9\xb1\xc3\x23\x82\x64\x64\x0b\xdd\xa5\x63\x02\x54\xad\x36\x5c\xdd\xdb\xd7\x39\x7b\xc3\x65\x38\xf0\xf4\x26\x0b\x80\x04\x8d\xec\x6d\x44\x44\xea\x1a\x55\xa9\x04\x3b\xe5\x63\x9f\x93\xb3\x52\x2b\xe9\x67\xb8\xbb\xea\xad\x54\x26\xe0\x97\x10\xb3\xb2\x77\x0e\x37\x33\xb0\xd4\x8c\xdc\xe9\x0a\xac\x2e\x8a\xc2\x37\x62\x9f\x64\x1c\xb7\x49\x0e\xda\x4e\x8f\x10\x44\x87\xf7\x9c\x67\x2e\x57\x10\x14\x01\x82\x9a\xa6\xd2\xec\x16\x74\x15\x6f\x5f\x29\x53\xf1\xe6\x78\x3a\x4c\x71\x20\x04\xd5\xf2\x02\x22\x54\x7c\xe3\xd3\x59\x0b\xcb\xdd\xb8\xa0\x93\xd3\xf7\xe9\x3b\x26\x40\xd5\x05\x9d\x4d\xc5\x12\xaf\x67\x95\xd2\xe9\x82\xe6\x2e\xd2\x11\x3c\x8c\x0a\x00\xe9\x37\x2c\x31\x00\x7f\xaa\xf8\x9a\x26\x76\xb0\xbc\xab\xf4\x32\x4b\x28\x2d\xc4\x97\x69\x60\x07\x76\xc9\x24\x80\x53\xf1\x50\x7a\x40\x15\x47\xd1\x32\xf3\x3c\xf6\xe0\x51\xcb\x15\x9c\x7d\x32\xb4\x32\x90\x35\x7a\x9c\xe7\xdd\x30\x57\x7e\xbe\x09\x8e\x8b\xff\x73\xfa\x1f\x9d\x7c\xa4\xeb\x23\x45\x5f\xed\x71\x52\xef\x42\xb5\x4a\x4b\x87\x26\x43\x7c\x8d\xa5\x34\x69\x4d\x78\x3c\x9e\xf9\x75\x28\x1e\xf0\x3a\x4c\xad\x56\xfd\xbc\x14\xe7\x15\xf7\x37\x02\xdc\xbe\xc2\xd7\xfd\xaf\xcb\xcb\xf3\x8b\xcb\xe9\xfa\x54\xf9\xa5\x09\xa4\xfc\x23\x9d\x9d\x9c\x3e\x11\x2c\x9e\x9e\xbc\x9b\x7a\x5c\x62\x81\xa0\x0a\xc0\x63\x57\xb1\xcd\xc1\xba\x1f\x1e\x93\xe1\x40\x44\xa7\xb5\xbd\x5d\xf9\x78\xff\x0d\x46\x09\x9b\x42\xa2\x23\xfc\x5b\xf0\x9d\x0a\xcf\xfb\x4d\xd1\x6d\xbf\x94\xd7\x91\x73\xbe\xdb\xf3\xdd\x91\xd8\x4f\xe4\xf8\x2b\x00\x00\xff\xff\x9f\xaa\x2b\x78\x9c\x06\x00\x00")

func dryrunMdBytes() ([]byte, error) {
	return bindataRead(
		_dryrunMd,
		"dryrun.md",
	)
}

func dryrunMd() (*asset, error) {
	bytes, err := dryrunMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dryrun.md", size: 1692, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _envMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6b\xdb\x40\x10\xbd\xef\xaf\x98\x3a\x85\xb6\x60\x29\xd8\xe9\x29\xd0\x83\x0b\x89\x69\xeb\x3a\x81\x04\x4a\x4e\xd1\x5a\x1a\x4b\x9b\xac\x76\xc4\x7e\xd8\x51\x4b\xfe\x7b\x67\xd7\xb1\x6a\x5a\xa7\x60\x83\x34\x9f\xef\xbd\x79\x12\xb3\x1f\x37\xb0\x90\xed\xaa\x92\x50\x11\x3a\x30\xe4\xc1\x85\xae\x23\xeb\x01\xcd\x46\x59\x32\x2d\x1a\x0f\x1b\x69\x95\x5c\x69\xae\xa0\xe0\x81\xd6\xe0\x1b\x84\x15\x3d\x8d\xc1\x11\x3f\x2b\x07\xfc\x93\xb0\x46\xe9\x83\x45\xe8\x2c\x6d\x54\x85\x15\xac\x7a\x98\x75\xf8\x94\xc3\x6d\x83\x1c\x97\xfc\x77\xb8\x41\x2b\x35\x6c\x65\xef\xc0\x13\xbf\xfb\x38\xcd\xe1\x9f\x25\x63\xd0\xe8\xdf\x71\x56\x3e\x72\x0f\x68\xa2\xc7\x37\x42\x9c\x9c\xc0\xa5\x96\x35\x64\x19\xb7\x08\xc1\x13\xa1\xc8\xb8\x36\xbd\x17\xb0\x8e\x39\xa9\x35\x6d\x1d\xf4\x14\xf6\xa3\x8f\xb3\xd8\x36\xaa\x6c\x12\x1c\x7c\xea\xc8\x31\x52\x4f\x89\xd3\x3a\x98\xd2\x2b\x32\x20\x3d\xd8\x60\xbc\x6a\x31\x87\x4b\xb2\x5c\x27\xdb\x4e\x23\x28\x03\x4b\xaa\x30\x7f\x70\x10\x9c\x32\x35\x14\x4c\xb6\x44\xe7\x72\xde\x94\x2f\x67\xdf\x2f\x0a\xe0\x72\x2e\x9b\xd3\xbe\x82\x5c\x3e\x47\xcf\xf9\xf7\xa3\x58\x30\xfa\x50\xe4\xf0\x19\x1b\x65\xaa\xb4\xd3\x95\x68\x18\x53\x92\xb1\xe6\x47\x2b\x3d\x46\x35\x8b\x34\xf2\xc1\x91\x61\x76\x8a\x77\xef\x50\x47\xb1\xcd\x03\x96\x9e\x51\x2b\xc3\xb8\x99\xad\x1d\x80\xb3\x6c\x3f\x55\xb7\xab\x0f\x1d\x13\xa9\xb0\xd3\xd4\xe7\x70\xc7\x9a\xb4\xb2\x67\x4c\xb8\x5b\x95\x04\x6b\x83\xf6\x2a\xf2\x8a\x4c\x5d\x2e\xc4\x21\xd7\xe4\x04\x2e\x8f\x72\x36\xb2\x62\x48\x0b\xaa\x6b\xdd\xf3\x45\x6a\x28\x49\x6b\x06\xc1\xe5\x92\x79\x28\x0f\x06\xb1\x62\xd8\x06\x66\xd7\x5f\x58\xce\x47\x34\xe3\xd4\xd9\xaa\xba\xf1\x2f\x30\x60\xab\x7c\x73\x2e\x44\x51\x14\xe2\x2d\x48\xb6\xc6\x3e\x91\x39\x58\x5c\xcd\xe7\x8b\xbb\xfb\xdb\xab\x6f\x17\xcb\x4f\x69\x40\x5c\x94\x0d\x8b\x52\xd7\x81\x0d\x58\x9d\x2c\xf2\xdc\x7b\xe1\x62\x7c\x10\x7c\xd5\x10\x03\xe3\xe3\xce\xd8\x9d\x4c\xc2\xd7\x9b\xab\x65\x52\x31\x3f\x8a\x76\xd8\x03\xa7\x9d\xf4\xcd\xa9\xa7\xd3\xfd\xb1\x06\x98\x69\x44\x49\x66\xad\x6a\x21\x6e\x3a\x2c\xd5\xba\x7f\x65\x2b\xdb\x85\x6d\x14\x8f\x9a\x46\x44\x07\xed\x0f\x9a\x02\xe3\xf8\x65\xc6\xbb\xc9\xf4\xb1\x70\xa7\x0e\xdc\x76\xdf\x06\xe7\xef\x61\xc5\xa7\xf2\x96\x71\xbb\x1d\xd8\x84\xe2\x97\x00\x18\x1d\x6c\x1b\x9d\x43\x0c\x71\xf0\x50\x67\x8e\x8e\x26\xd3\xb3\xc9\xc7\xe9\x64\x3a\x9d\x9c\xf1\xe3\x88\x8b\x9e\xc5\xf3\xc0\xe2\xda\x62\x89\x15\x9a\xf2\x45\xe7\x6e\x78\x8f\x4e\x2c\x83\xb5\x3c\x9c\x3d\x21\xd9\x51\x94\xd4\xe6\xfb\x66\xff\x7e\x9a\x3b\xc8\x29\xf3\xf7\xa1\xa2\x8c\x43\xfa\xb8\x40\x2e\xc9\xa7\x92\xe5\xff\x2f\x95\xf8\x1d\x00\x00\xff\xff\xe2\xcd\x03\xdb\xd5\x04\x00\x00")

func envMdBytes() ([]byte, error) {
	return bindataRead(
		_envMd,
		"env.md",
	)
}

func envMd() (*asset, error) {
	bytes, err := envMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "env.md", size: 1237, mode: os.FileMode(420), modTime: time.Unix(1465925415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _faqMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x56\x4d\x6f\xdc\xb8\x12\xbc\xfb\x57\x34\xec\x43\x12\x60\x46\x03\xbc\xc3\x3b\xbc\x4b\x10\xf8\x61\xb3\x5e\xe4\x03\x58\x07\xc8\x21\x08\x62\x4a\xa2\x24\x7a\x28\xb6\x96\xa4\x46\x9e\x7f\xbf\xd5\x24\x35\x23\xef\x02\x41\x6c\x8b\x1f\x5d\x5d\x5d\x5d\xcd\x9b\xbb\x3b\xfa\x9d\x17\x6a\x99\xce\x3c\xd3\xa8\x9c\xea\x35\x8d\xb3\x8d\x66\xb2\x9a\xb4\x3b\x19\xcf\x6e\xd4\x2e\x86\xf7\x37\x37\x0f\xf1\x4d\xa0\xc1\xf4\x83\x3d\x93\xd7\x0d\x8f\x58\x68\x75\x4b\x91\xa9\xf1\x5a\x45\x4d\x41\x4f\xca\xcb\x2f\x1f\xbe\x3f\x92\x6a\x1a\x9e\x71\x92\x3a\xf6\x14\xa2\xea\x8d\xeb\x49\xb9\x96\x26\xcf\xed\xdc\x44\xc3\xee\x55\x84\x8a\xbe\x0d\x26\xc8\xea\xc9\xb4\x3a\x10\x02\x00\x04\x2e\x33\x81\xad\x4a\xdb\xb9\x43\xe0\xc0\xb3\x6f\x74\xd8\xa5\xbb\x94\xb5\xbc\x84\x84\x1e\x30\xb4\x0a\x06\xe0\xca\x15\xd4\x7b\xe5\x66\xab\xbc\x40\xd1\x21\xa4\x1d\x9b\x80\xa4\x02\xae\xfb\x6b\x36\x5e\xb7\x15\x3d\x6a\x4d\x3f\x04\x37\x72\x69\xb1\x6c\x94\x0d\x3f\xdf\xde\xa9\x25\xec\x37\x5f\xde\xe5\x6c\xe6\x69\xb2\xe7\x9c\xcf\x9a\xa7\x44\xed\x8c\xd5\xd5\xcd\x8d\xdc\xf2\xf0\xe1\x33\x79\xb6\x92\x07\xf6\xd4\x9a\xe6\x90\xa9\x5a\xc1\x21\x6e\x73\xdc\x22\x53\xcd\xb0\x85\x87\x03\x29\x00\xb5\x9e\xa7\x7d\xcb\x8b\x23\xe3\x28\x0e\x99\xdc\x7b\x76\x60\x45\x82\xa1\x84\xf7\x88\xf0\x40\x51\x87\x48\xdd\xec\x12\xb3\x81\x2c\x37\x20\xe7\x8c\xba\xdd\xcf\xde\xe3\x42\x10\x83\xd3\x5e\xf8\x24\xc7\xb4\xa8\xb3\x84\xf5\xb3\xfb\xf7\xa1\x1d\x99\x48\x0b\xcf\xb6\x15\xe4\x8a\x4e\xda\x9f\x09\x44\x42\x1c\x51\x85\x63\x82\x0b\x95\x48\xa5\x0b\xa0\x8a\xbe\xeb\xab\x28\x68\xf1\x26\x0a\x7a\x59\xad\x67\x7b\x94\xca\xa1\x46\x1e\x01\x7a\xd3\x08\xf1\xd6\xd4\x5e\x79\x03\x7e\xc0\xe7\xa4\x9a\x23\x94\x07\x5c\xa8\xf3\x49\xcb\xfd\x69\x77\x33\x70\xd0\x0e\x91\x5d\x3f\x63\x7d\x57\x38\x61\x97\x72\x01\x1d\x0d\x3b\xa7\x9b\x74\xc6\xaa\xb3\xf6\x61\xe5\xe8\x93\x1a\xeb\x56\x6d\x32\xc3\xc7\x31\x68\x7b\xd2\xab\xce\x46\x75\x44\x40\xe4\x09\xd1\x24\x26\x66\x67\xe2\x3e\x91\x98\x62\x5f\x8e\x66\xa1\xe5\xed\x72\x0b\x8d\x0c\x12\x27\xf6\x51\xd5\x68\x12\x93\x32\x7b\x83\x4f\x0b\x7b\x24\x04\x4d\xd6\x3c\x47\x70\xe6\x5a\x96\x84\x9b\xe3\xde\xb8\x5c\x28\xe9\x35\x23\xb7\xe0\xbf\xd6\x74\x9d\x96\xba\xe0\x4f\xd4\xef\x51\x7b\xb0\x0c\xbd\x48\xa7\x5d\xff\x10\xd9\x04\xba\xb7\x3c\xb7\xbf\xb1\x1f\x73\x1b\x00\x6c\xcd\x1c\x43\xf4\x6a\xda\x36\xc4\x32\x18\x68\xa8\xe8\xad\x97\x96\x4c\x6a\xed\x75\x4c\xc5\x40\x0f\xfa\xa8\xdb\x1d\x2a\x12\x05\x46\xaf\x9d\xf6\x52\x6e\x4a\x91\x3c\xd7\x73\x28\x68\x7e\x7c\xd3\xde\x2b\x1c\x1e\x7f\xbe\x1d\x62\x9c\xc2\xff\x0e\x87\x65\x59\xaa\xb8\x7e\xae\x0c\x1f\x72\x2f\x24\xd3\x90\xeb\x8d\xeb\xbc\x02\x26\xb4\xf6\xec\x45\x18\x9e\xe7\x7e\x10\x2a\x4c\x94\x7a\x77\x3a\x9a\x51\x57\x84\x3c\x32\x03\x00\x18\x90\xcd\x87\x49\xbf\xc0\x81\xa4\xfa\x1c\xa9\xb9\x88\x75\x6d\x94\x35\xc1\x62\x4f\xd2\x1b\x97\x12\x9e\x21\x11\x88\x43\xaf\x65\xef\xe6\x14\x5b\x70\x59\x18\x55\xbc\xf2\x34\x01\xe2\x0e\x1f\x8f\x1a\x57\x63\x37\x92\xe4\x49\xd8\x54\x96\x52\x42\x68\xdb\x98\xee\x10\x94\xa2\xd7\x55\xc3\x9b\x62\x5c\x50\x8a\x01\x40\x00\x14\x06\x33\x8e\xb2\x29\x45\x2c\x32\x0d\xa5\x10\x0a\x48\x36\x9b\xa1\x8c\x2c\x6f\x00\xa8\xcf\x45\xa1\x3b\xac\xca\xd6\x40\x1f\x59\xce\x57\x1b\x3a\x12\x49\x72\xb1\xb8\x9b\xf0\x08\x50\xa9\xa1\xf8\x05\x68\xbf\xe1\xb7\x0b\xdb\x10\xf2\x38\xb1\x38\x0c\x6e\x4e\x4e\x02\xf6\x9e\xd1\x19\x09\xc4\x45\x6a\x3b\x09\xb4\x68\x6b\xe5\xe7\x49\xf9\x64\x61\x1d\x74\x22\x57\x00\x8a\xce\xfd\xdc\x72\x33\x0b\xcd\x59\x6d\x82\xe0\xd5\x95\x90\x9f\xec\x5c\x06\xe8\x4b\x1b\xf1\x94\x35\xc5\x50\xbd\xd2\xae\x32\x63\xb2\x36\xa8\xb1\x14\x13\x56\xdc\x3b\x0e\xd1\x34\xff\x50\x6b\xcd\x11\x2c\xc8\xb6\x6c\xeb\xd2\xd9\xd4\xea\x09\x4d\x94\x3b\x3e\x01\xb3\x1a\xec\x09\x0d\xaa\x96\xa2\xe6\x19\x52\xba\x0f\xd6\xd3\xad\x3d\xb9\x00\x55\x6e\xdb\xdc\x9d\xb8\x29\x18\x9f\x7c\x65\x50\x27\x71\xb4\xc8\x6c\xd1\xc8\x2d\xb8\x00\x69\x8d\x05\x77\x5e\x96\x15\x89\xc3\xd8\x2b\xe0\x37\x62\xe0\x93\xaa\x8d\x85\x1a\x2e\xe6\x11\xcc\x68\x64\xb0\xe0\x84\xe0\x02\xd8\x28\x03\x02\x68\x14\x54\x8f\xb8\x5f\xff\xfc\x4c\xa7\x40\xb7\x5e\x2d\xb7\xb0\x7a\x2d\x4e\xf7\x9a\x1c\xdc\x22\x0a\xc3\xb9\xe2\x6a\x5f\x80\xa6\x7a\x46\x19\x92\x02\x36\xcb\x50\xeb\x47\x2e\xc2\xd8\x50\x2a\x50\x65\x42\xa6\x3c\x4b\xf3\x62\x26\xcc\x02\x23\xb1\x8b\xa5\x6d\x3c\x81\xd8\x06\xa1\x32\xe7\x96\xa7\x4b\x32\xb3\x22\x81\xbd\x97\x8a\x5c\xef\x98\x64\x42\x25\x33\x9c\x18\x43\xb8\x98\xd8\x43\x28\x80\x25\xf3\x02\x3a\x35\x02\x05\xcc\xe2\xf7\x45\x99\xf2\x77\x7e\x15\x04\xa9\x26\xd0\xa4\xc1\x2f\xd3\x6e\x87\x93\x73\xd8\xac\x76\x7a\xd9\x0f\x60\x0d\x63\x96\xc0\xab\x35\x01\x83\x04\x49\xa1\x3a\xe8\xf0\x2e\xf9\x05\x40\x1a\x8f\x0c\x8d\x3b\x61\x46\x09\x3e\x8c\xec\xb9\x0e\x98\xdf\xe2\xa1\x32\xb6\x42\x2e\xe0\x6a\xdc\x49\xfa\xa5\xe1\xa5\xf0\xb0\xfa\x34\xad\xd3\xb4\x90\x8a\x29\x03\xff\xc3\x4c\x71\x89\x9f\x6c\x1f\xe5\x28\xf4\x1d\xca\xd4\x43\x0d\x40\x24\xd4\xd6\x75\xa6\xc9\x0c\xfc\x9f\x73\xe3\x03\xee\xb5\xe7\xb3\xb0\x9c\x9c\x18\x4d\x6e\x9d\xf0\x8a\x8c\x8b\xb1\xf1\xa4\x7d\xca\x3c\xd3\xf8\xc7\xe3\xd7\x2f\xc4\x27\xe9\xa2\xd8\xa2\xcd\xe1\xcf\xba\x51\xf0\xfd\xdc\xef\x26\xbf\x6e\x46\x29\xaf\x7c\xc4\x26\x98\x70\x36\x1c\xee\xc5\x79\xb7\x8f\x80\xf2\x84\xdb\xce\x3d\x74\x69\xf6\x14\xd3\x66\x87\x4d\xbc\x03\xda\xaa\x33\xf9\x28\x0d\xd2\xbb\xfc\x42\x81\xa3\xb6\x56\x9a\xad\x57\x0d\x0c\x56\x05\xf1\x06\xde\x4c\xc4\x72\x45\x32\x1b\xce\xfd\xcf\x5d\x5c\xc0\x77\x76\xf7\x11\x1d\x5e\xb2\x4c\xdb\x53\x20\xaf\x93\x07\x35\x79\x8a\xe6\x97\xc6\x76\xc8\xa2\x53\x4d\xbc\xc2\xe9\x8c\xa0\xb9\xbc\x47\x70\x24\x75\xba\xf8\x85\x6c\x28\x1c\xc2\x4e\x50\x45\x91\xc5\x3a\x13\xf0\xaf\x3e\xef\x73\x3a\xd9\x01\x82\x54\xf8\x22\x83\x3c\x2f\x32\x65\xdf\x85\x1b\xac\xff\x52\x00\xf8\xcb\xe0\x31\xfb\x52\xe5\xe4\x57\x76\x2e\x8f\xd1\xed\xc3\x2c\xbf\x9a\x64\x4c\x48\x2c\xba\x5d\xca\x78\xb9\x4d\x89\xe9\x17\x13\xd2\xdc\x40\xb1\xfc\x7e\x4d\x24\x5f\xeb\x43\x26\x48\xbf\xa8\xd4\xb9\x65\x6a\xad\x4d\x24\x54\x8b\x46\x9f\xb6\x80\x9e\xc3\x13\xc9\xbb\x52\x80\xae\xbc\xe3\x1c\xfb\x36\x3b\xd6\xc4\x53\x7e\x89\x3d\x95\xf6\xaa\x80\xf5\x09\x1a\xea\xa4\xb3\xf3\xfb\x76\xed\x56\xf6\x06\x82\x01\xef\xeb\xd0\x79\xba\xc4\x90\x89\xc2\xf2\x54\x40\x07\xd5\x78\x30\xe0\x72\x74\x24\x10\x47\x55\x2c\xb8\xa3\x01\xcf\x97\x24\x48\xbc\x74\x8e\x28\x23\x9e\x44\xd8\x6d\x99\xf1\x8e\xcd\xb3\xf3\xc7\x9a\xca\x64\x67\x44\xa2\x64\x50\x97\x51\x72\x7d\x4b\xf4\x30\xe8\xb9\xae\xe0\xd9\x07\x49\x35\xff\x57\x5b\xae\x0f\x23\x9e\x10\xda\x1f\xf2\xf9\x70\x70\xb8\xef\x79\xfd\x51\xf5\x7c\xf7\xe9\x3f\xff\x7d\x57\xdd\xfc\x1d\x00\x00\xff\xff\x6e\x90\x1f\x6f\xb9\x0c\x00\x00")

func faqMdBytes() ([]byte, error) {
	return bindataRead(
		_faqMd,
		"faq.md",
	)
}

func faqMd() (*asset, error) {
	bytes, err := faqMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faq.md", size: 3257, mode: os.FileMode(420), modTime: time.Unix(1465855969, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _functionsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x4d\x6f\xdc\x46\x0c\xbd\xcf\xaf\x20\xd6\x87\xda\xc0\x46\xf5\x47\x8d\x36\xba\x19\x71\x5d\x18\x88\xd3\xa0\x2d\x52\xf4\x14\xcd\x4a\xdc\xd5\xb8\x9a\x19\x75\x3e\xd6\x56\x8b\xfe\xf7\x92\x33\x92\xac\x75\xdd\x26\xb9\x18\x5e\x8a\x7c\x7c\x7c\xe4\x90\xe2\x0a\xb6\xd1\xd4\x41\x59\x03\xca\x43\x68\x11\xbc\x96\x5d\x87\x3e\x40\x34\x2a\x80\x32\x70\xd5\xe3\x63\x01\x0b\x47\x87\xbd\x43\x8f\x26\x78\x90\xf4\xf9\xd7\x9f\xe1\xad\xd4\x9b\x46\xce\x1e\x85\x10\x37\xe3\xbf\x1e\x74\xf4\x0c\x53\x77\xb1\x41\x90\x01\x3a\x94\x64\xb0\x86\x32\xd9\xe8\x6a\x84\xad\xea\x10\x8e\x5d\x34\x41\x69\x84\x06\x7b\x34\x0d\x81\x9f\xac\xc1\xc7\xba\x05\xe9\x29\xba\x21\x0a\xf7\x1e\xac\x03\x2d\x95\x29\x76\xb6\x80\x1f\x7b\xc6\x27\xae\x03\x2c\x32\xdf\x7b\x22\x98\x10\xb5\x1c\x60\x83\xd0\x77\xb2\xc6\x86\xeb\xe0\xe2\x3e\x4e\x8e\x5f\x79\x68\x94\xc3\x3a\x58\x37\x7c\xa4\x4c\x3d\xd6\x6a\x3b\x28\xb3\x23\x02\x41\xaa\xce\xcf\xc9\x39\x4c\xa3\x26\x3f\xa0\x64\xb6\x96\x81\xe0\x88\x08\xdb\xb9\xf6\xdb\xab\x3b\x70\xb6\xc3\x02\x6e\xb7\xa9\x2c\x26\x69\x1d\xce\x9c\x3c\x2b\xab\x95\xf7\x8c\xfe\x22\xd5\xc1\xc6\x2c\x53\xef\xec\x5e\x35\x2c\xc2\x56\xc6\x8e\xf4\xdd\x8e\x89\x1c\xfe\x11\x89\x6e\x43\xfe\xd8\x35\xac\x08\xfb\xde\x13\xff\x0c\x73\xec\x11\x61\xf5\x3e\x9b\xfc\x2a\xc5\x51\x6f\xf0\x51\xea\xbe\xc3\x13\x6a\xc8\xd1\x11\xbc\xb1\x66\xab\x76\xd1\x49\x4e\x2f\x44\x55\x55\x1c\x2b\xfe\x12\x00\xab\x06\x7d\xed\x54\x92\x74\x55\xc2\xea\x9d\x6d\x90\x05\x1f\x01\x66\xd2\xab\x35\x3b\x8f\xbd\x62\x47\x43\x8e\xf7\x3e\x9b\xb3\x4a\x64\x3d\x3b\xff\x2e\x19\xd8\xc9\xc6\x40\x96\xcb\x1c\x47\x32\x71\x90\x74\xa6\x94\x0f\xbe\x54\x52\x97\xe5\xf9\xeb\x8b\xcb\xd3\x8b\xb3\xd7\xdf\x5e\x9c\x7f\x53\xb2\xc7\xd7\x5d\x9a\xa6\x95\xf8\x9b\x29\x26\xe6\x37\xa9\x6a\x9a\xaa\x5c\xbd\x96\xee\x77\xd2\x82\x9a\x53\x29\xd3\xa2\x53\xd4\x92\x6a\x6e\x78\xd6\x70\x6e\xf9\x81\x4e\x49\x6e\x65\x7c\x40\xd9\x24\x51\x8e\x60\x51\xb9\x10\xd7\x4f\x3f\xc0\x6e\x53\xfc\xdc\x2f\xf8\xa5\x55\xa9\x97\xd1\xe7\xe4\xfc\x75\x11\x9d\xde\xca\xfc\x18\x08\xfd\x15\x84\xa1\xc7\x12\x2a\x1f\x1c\xf5\xbe\x22\xc3\xd4\xc7\x9c\x7a\xd4\x51\x88\x9f\xc6\xe1\xff\xac\x94\xd3\x4b\x39\x48\xb7\xe6\xb1\x7b\x68\xd1\xcc\x29\xd6\x73\x5c\xb0\x3c\xd4\xe8\xb4\xa2\xe9\x0c\x2d\xbd\x41\x86\x99\x5a\xec\x5b\xa5\xe9\x8f\x8d\x5d\xc3\xf2\x71\x44\x01\x37\x84\x36\xf5\x3e\xa1\x06\x26\x92\x86\x8f\x61\x57\x3b\xdb\x49\xb3\x5b\xad\x13\x52\x2d\x8d\x35\xaa\x96\xdd\x4c\x2d\xa5\x65\xbf\x71\x3c\x68\x16\x89\x7e\x4e\xc5\x05\x19\xee\x48\x6a\x11\x71\x63\x88\x3f\x55\x9f\x7a\xf3\x09\xd5\x5e\xc1\xdc\xef\xac\x60\x4b\xc0\x1d\x3a\x21\xbe\xdf\xd3\xca\x98\x7e\x82\x91\x1a\xd7\x99\xf3\xb8\xd5\x9e\xb6\x9c\xd9\x5b\x1e\x9e\xf4\x42\x60\xa7\x28\x0e\x90\x83\x0b\xb8\x9e\x5e\x9d\x74\x58\x32\x91\xcc\xbe\xe4\x29\xe3\x05\x94\xd1\x2b\x38\x9e\xf7\x51\x1a\xa7\x07\x15\x5a\xa8\xa6\x8f\xf8\xd8\x5b\xc7\xb5\x4d\x19\x4f\x08\xa8\x1f\x42\x6b\x4d\x39\x7b\x91\xe9\x5e\xee\x25\x19\xf2\xac\x17\x77\xb4\xd5\xca\x72\xa4\x5f\xe5\xda\xf2\x73\x12\xe2\xee\xf9\xf2\x19\x35\x9b\x12\xac\x79\x12\x34\xee\xe4\x66\x08\xe8\x97\x0a\x92\xbc\xff\x2f\xdf\xf8\x40\x9f\xd6\xf5\x64\x61\x48\x8f\xb5\x35\x8d\x2f\x68\x52\xc2\x38\x37\xe3\x9e\xaf\xa3\x73\xa4\x18\x6d\x5e\xba\x03\xd4\x25\x5a\x39\xd0\x8c\x7b\xc5\x33\xbd\x4b\xda\x77\x26\x12\x1b\x38\xbe\x38\x3d\xf5\x27\x5f\x44\x8a\x77\x80\x10\x8b\xb3\xc2\x86\x3c\x97\x5f\x38\x1d\x68\xf6\xca\x59\xa3\x89\x2b\x4d\xc8\xd3\x0f\xd8\x4b\xa7\xe4\xa6\x3b\x54\xcb\x6e\x78\x2a\xab\x17\x08\xf1\x45\x30\xd8\x7c\x40\xe7\xb9\x42\x21\xde\x45\xbd\xa1\x31\xa3\xe7\x3a\x7d\x83\xc5\x61\xd9\x8f\x7e\x74\x0d\x96\x0b\x81\xef\x83\xb1\x61\xbc\x35\x8a\x62\x2a\x3a\x76\x9d\x1d\x2a\xa8\xad\xd6\xfc\x44\x1e\x54\xd7\xf1\x81\xdc\x23\x9c\x9d\xce\x38\x2f\xa8\xf7\x8c\xe1\xbe\xaf\x85\x20\x78\x3a\x24\xee\x69\xd4\x0d\x62\x93\xda\x21\xeb\x1a\xbd\xe7\x66\xa5\x8b\x9b\xce\x87\x84\x0f\xef\xdf\x70\x8f\x23\xe1\x0c\xb0\x73\x36\xf6\x3e\xbd\x53\x1f\x37\x06\xa9\xa3\x2d\xd3\xa0\xe8\xc5\x4e\x2d\xe0\xb7\xe7\xa7\xea\xf0\xa2\x1f\xc0\x25\xb4\x64\x4e\x88\x9f\xa3\x75\x2a\xa5\x98\x60\x7e\x48\xa4\x84\x78\xab\x18\x7f\xfb\x2f\xb6\xb7\xd7\x7e\x81\x29\x9d\x93\xc3\x7f\x42\xe6\xa2\x16\x58\x63\x95\x9f\xc4\xf8\x27\x00\x00\xff\xff\xc7\x0f\x6e\x9f\x23\x09\x00\x00")

func functionsMdBytes() ([]byte, error) {
	return bindataRead(
		_functionsMd,
		"functions.md",
	)
}

func functionsMd() (*asset, error) {
	bytes, err := functionsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "functions.md", size: 2339, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gettingStartedMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\xb0\xc1\xb0\x62\x58\x1a\xdf\x03\xec\xd0\x43\x0b\x14\x68\xb7\x62\x3d\x0c\xc3\x3c\x38\x8a\x4d\xc7\xea\x14\xc9\x10\xe5\x26\xde\xb2\xff\x3e\x52\x72\xbe\xd6\x01\x33\x10\x7f\x48\x8f\x8f\x8f\x8f\x54\xb2\xeb\x0e\xb7\x50\x29\x0b\x2d\x9a\x0e\xb4\xd5\x41\x2b\xa3\x7f\x22\x28\x58\x2a\xd2\x15\x74\xde\x3d\x63\x15\x20\x38\x58\x61\x80\xc1\xf5\x40\x41\xf9\x80\xf5\x0c\x6e\xb5\xa7\x00\xd4\x61\xa5\x9b\x41\xb6\x3c\x5c\x7f\x79\x82\xca\x63\x8d\x56\x88\x08\x14\xc1\x5a\xde\x9d\xc5\x9a\xe9\x21\xb4\xc8\x94\xf8\xa2\x5d\x4f\x40\x4c\xcc\x3b\x53\x59\xb5\xe0\x7b\x0b\x0b\x25\x7a\x44\xc6\x62\x9e\x65\x8b\xc5\x22\x7b\x03\xb8\xed\x9c\x0f\xc2\x5c\x3e\x7e\xfe\x74\x7b\x77\x7f\xf3\x81\x8c\x0b\x2d\x5d\xb1\x90\x15\x32\xe2\x10\x14\x23\xb2\xaf\xae\xbf\x34\x06\x96\x31\x13\x71\x76\x4e\xbd\xd1\xa1\xe5\x9a\x1a\xdc\x48\x45\xeb\x2e\xd0\x74\xd4\x12\xcb\xbb\x24\xa8\xb1\x51\xbd\x09\x70\xaf\xd6\xcb\x5a\xc1\xdd\xf5\x03\x78\x67\x10\xde\x42\xe7\x8c\xae\x06\xa6\x48\xa4\x5c\x9e\x62\xca\x51\x35\x57\x7d\xe9\x11\x78\xad\x1e\xa2\x49\xee\x22\x4b\xca\xe1\xf4\x2a\xe3\x8d\xaf\x74\x1f\x5f\xce\x30\x39\x14\x00\x3b\x81\x16\xbb\x08\x2a\xa0\xc8\x21\xcf\xce\x20\xbc\xc9\x98\x5d\xf9\x2e\x22\xf9\xc7\x31\xa7\x90\x5c\x22\x85\x80\x9f\xb9\x00\xf9\x2b\x67\xd4\x11\x92\x97\xfc\x0d\x45\x59\x48\x74\x04\x30\xb2\xcc\x79\x81\x75\x33\xec\x86\xfd\xf2\xd1\x1b\xab\xd6\x08\xae\x49\x8d\x1d\x8d\x9a\xc1\x1d\x77\xbc\x75\xbd\xa9\xc5\x8b\xb5\xaa\x5a\x6d\xf1\xaa\xf1\x1a\x6d\x6d\x86\xa9\x34\x3c\xb4\x9a\x98\x48\x13\xf4\xc4\xd6\xb3\x29\xdc\x87\x46\x6f\x13\x51\xd3\xdb\xd8\x75\x92\x71\x48\x66\xcf\xb2\x28\xef\x71\x1c\x35\xc9\x3b\x87\xd4\xe3\xa3\x22\x9e\x51\xd7\x49\xa0\x32\xdc\x2b\xaa\xbc\x8e\x5f\xaf\x04\x9e\x73\x9d\x20\xe7\xf0\x30\x24\xd6\x61\x0f\x16\xec\xb7\xf7\xdf\x53\x4b\xb5\x5d\xc5\xae\x47\x48\x69\xa2\xb2\x72\xaf\x36\xce\xc2\x7f\xd1\xc6\xad\x68\x1c\x97\x11\xab\x42\x88\x16\xad\xf6\x53\xc4\x6e\xfc\x8b\x7a\xf6\x37\xf7\x2c\xdf\x17\xf4\x4c\xce\xbe\xde\x3d\xd8\x28\x35\x3c\x61\xe8\x3b\xa8\x78\xae\x0d\x06\x9c\x72\xd5\x9d\x71\x9c\xab\x75\x84\x47\xc3\x2f\x92\x35\xe3\x79\x49\x98\x34\xaa\xd9\x47\xb7\x81\xe0\x07\x6e\xc9\x8b\xfb\x21\x09\xa4\xff\xa4\x84\xef\x10\x7f\x38\x90\xe3\x71\x63\x24\xca\xdf\x86\x71\xd9\xaf\x49\x7c\x4e\xe6\x93\x8d\xf3\xa6\x9e\xfc\x8e\xc8\x3f\x01\x00\x00\xff\xff\xc8\xa7\xad\xff\x5d\x04\x00\x00")

func gettingStartedMdBytes() ([]byte, error) {
	return bindataRead(
		_gettingStartedMd,
		"getting-started.md",
	)
}

func gettingStartedMd() (*asset, error) {
	bytes, err := gettingStartedMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "getting-started.md", size: 1117, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hooksMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcd\x6a\x1b\x4d\x10\xbc\xef\x53\x34\xf2\xc1\x9f\x41\x12\xdf\x21\xe4\x10\x70\xc0\x31\x89\xed\x93\x21\x7e\x01\x8d\x76\x7b\xb4\xe3\xcc\x4e\x0f\xf3\x83\xad\x04\xbf\x7b\xaa\x67\xd7\x42\x04\x02\xb9\x08\x66\xbb\xab\xaa\xbb\xaa\xd5\xdd\x44\x7e\xa5\x5c\x63\x94\x54\x32\x95\x91\x29\x48\x71\x12\x48\x2c\x8d\x22\x3f\xf2\x9a\x5e\x46\xd7\x8f\x64\xbc\x97\x17\x3a\x4a\xa5\x22\xc4\xaf\xdc\xd7\xc2\x94\x47\xf6\x9e\x7a\x99\x26\x13\x06\x85\x27\xa9\x87\x51\x6a\x21\x43\xb6\x86\x5e\x99\x2e\x33\x79\x67\xb9\x3f\xf6\x9e\xb7\xf4\x4d\x12\xd0\x66\x8a\x9e\x1b\xd9\x64\x8e\x54\x33\xab\x32\x7e\x9b\xa2\x0a\xa4\x1a\xa8\x70\xc6\x48\xe8\xf7\x2e\x14\x17\x0e\xb4\x67\x2b\x89\x41\x3d\x70\xf4\x72\x5c\x6b\x0d\xbd\x25\x99\x90\xa3\x03\x61\x96\x9a\x7a\xc6\x3c\x03\x83\x54\x21\x5f\xcc\x9e\xfd\x9a\x6e\xc5\x5a\xe6\xa7\x3e\xb9\x58\x1a\x2c\xbb\xc9\x79\x93\xb6\x5d\x77\xdf\x24\x75\x8c\x3d\x08\x22\xf7\xce\x3a\x1e\xc8\x05\x8a\x49\x9e\xb9\x2f\xdb\xe7\xac\x76\xa4\xd3\x42\xed\xc3\x96\x66\xa0\xc1\x40\x8b\x1b\x0d\xa4\x0e\x9e\x6d\x3e\xb8\x04\x0a\x49\x18\x16\xbe\xb6\xea\x42\x7b\x5e\xdc\xd2\x83\xc5\x5a\xba\x3d\xc8\x1c\xb6\xfe\x4c\xff\x6b\x73\xa0\x96\xcf\x8b\x83\xcb\xa3\xf1\xb0\x35\x0c\x80\xe5\xe8\x31\xaf\x92\x71\x4a\xa2\x5b\x3c\x84\xc2\x29\x20\xa3\xe3\x8c\x80\xa5\xf9\x4f\x4f\x9d\x9a\x3e\x71\x28\x84\x80\x36\x62\x37\xa8\x6f\xf6\x72\x8a\x9f\xe0\x2e\xdd\x89\x37\xf0\x4d\x75\x04\xf5\xa4\xe1\xaa\xb7\x03\xe9\xf7\x6a\x0e\x9c\x21\x77\x71\x41\x4f\x33\x08\x85\x26\xd0\x75\x1b\xda\xed\xab\xf3\xc3\xae\x85\x77\xca\xea\xdd\x0c\xfa\xe9\x22\xb9\x4c\xda\x53\xe8\xbf\x39\x73\xd7\x06\x5b\x24\x68\xef\x82\x49\x8e\x5b\xe6\x2d\x54\x50\x4c\x4b\xa8\x57\xca\x3f\xe7\xfe\x37\x01\x90\xcd\x0d\x98\x49\xf9\x6d\xf5\x6d\x25\xbd\x23\xdc\xc2\xfa\xfd\x8e\x1a\x15\x8e\xd1\x84\x99\xc9\x58\x78\xf7\x2f\x44\x0d\xa3\x57\x55\x63\x5b\x63\x40\xfa\xc5\x59\xd3\x97\x7c\xd5\x3c\xf9\x3a\x1f\x36\xcc\xb8\xe7\xc4\x97\xf3\xff\x69\xf6\x1f\x34\x7a\x1f\xa7\x94\xce\xbc\x5e\xec\x87\xad\xbb\xdd\x4e\x6f\xab\xfb\xd5\x11\xad\x1a\x6e\xf5\x89\xf4\x81\x67\x13\xc4\x73\x75\xf7\xf8\xf8\x74\x8d\x55\xea\x2b\xdd\x3d\xde\x7c\xbf\xbd\xbf\x36\xd3\xf0\xf1\x03\x1d\x64\x19\x6a\x23\x38\x67\x9c\xa2\xfe\x6c\x0f\xb2\x5a\xcf\x04\x6d\x7a\x25\x80\xa7\x1b\xdb\xaa\x2b\x54\xde\xba\x37\xd5\xed\x7e\x07\x00\x00\xff\xff\x50\x2e\x7c\x0a\x0a\x04\x00\x00")

func hooksMdBytes() ([]byte, error) {
	return bindataRead(
		_hooksMd,
		"hooks.md",
	)
}

func hooksMd() (*asset, error) {
	bytes, err := hooksMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hooks.md", size: 1034, mode: os.FileMode(420), modTime: time.Unix(1465855969, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ignoreMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x91\x7a\x28\xa0\xe2\xdc\xcb\x0d\x09\x09\x4e\x7c\x00\x42\x8d\xeb\x6c\x92\xad\x1c\xaf\x65\x6f\xa0\xfd\x7b\x92\xa6\x45\x80\xb8\xd9\xde\x99\x37\xe3\x35\xaf\x49\x59\xa2\x0b\xa8\xad\x4b\x74\xe4\x2e\x4a\xa6\x1a\x2d\x07\x2a\x18\xdc\x09\x7b\x42\x0a\xce\x53\x03\x8e\xd0\x7e\xba\x65\x39\x90\xd7\x75\x41\x16\xd1\x0d\x24\xe3\x93\xb5\x9f\xa6\x25\x91\xe7\x96\x3d\xda\x31\xfa\x19\x8b\x86\xf3\x24\x95\xcc\x54\x2c\x5e\x14\x63\x99\xa8\x6f\xb6\x63\x5d\x82\x90\x9c\x2a\xe5\x88\x56\xf2\xe0\xf4\xfd\xa6\x57\x4d\x65\x5b\x55\x93\xe2\xbe\xf8\xc1\x7a\x19\xaa\x46\x7c\xa9\xbe\x2d\xab\xdd\xc5\xb3\x5b\x3c\xb7\x0f\x70\x21\x5c\x41\x05\x0d\xb5\x1c\xa9\xd9\xc0\x4d\xf8\x4c\xc1\x29\x7f\x10\x54\xfe\x2d\x05\x17\x1b\x44\xd1\x9f\x1f\x03\x6b\xa1\xd0\x5a\x3c\x9e\x66\x98\x1b\x83\x62\x2f\xda\xff\xd9\xd0\xec\xac\xaf\x4c\x7b\x28\x12\xeb\x73\xe4\x32\x6f\xac\x31\xab\x15\x9e\x8e\x6e\x48\x81\x8c\x79\xa6\x4c\xeb\x39\x0e\xb4\x3c\x2d\x3a\x8e\x1d\x3a\x41\x91\x31\x7b\xba\x2c\x7d\x06\xcf\x75\x7e\xb1\x2f\xa5\xb6\xc6\xd4\x75\x6d\xee\x6c\x27\xe7\xc3\x57\x00\x00\x00\xff\xff\x01\x63\x0b\xe0\xbf\x01\x00\x00")

func ignoreMdBytes() ([]byte, error) {
	return bindataRead(
		_ignoreMd,
		"ignore.md",
	)
}

func ignoreMd() (*asset, error) {
	bytes, err := ignoreMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ignore.md", size: 447, mode: os.FileMode(420), modTime: time.Unix(1455649920, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _infraMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x4b\x6e\xe3\x38\x10\x86\xf7\x3a\x45\xc1\x09\xf2\x00\x62\x19\x98\x65\x76\x46\x90\x59\x4d\xb2\x98\x09\x30\x18\x0c\x1a\x56\x59\x2a\xd9\x4c\x28\x52\x4d\x52\x52\xb4\x6b\xf4\x19\xbc\xec\x45\xce\x92\xa3\xe4\x24\x5d\x45\x29\xf2\xa3\x81\x06\x0c\x43\x7c\xd5\xe3\xfb\x7f\x32\x59\xd6\xf4\x0a\xca\x83\x32\x81\x36\x0e\x03\x15\xd0\xa9\xb0\x85\xff\x9f\xc8\x39\x2c\xad\xab\xbe\x5c\x6d\x43\xa8\xfd\xed\x62\xd1\x75\x5d\x1a\x3e\xa7\x53\x65\x17\xd7\x10\x2c\xd4\xce\xb6\xaa\x20\x8e\x50\x3a\xf4\xc1\x35\x79\x68\x1c\x41\x85\x06\x37\x54\x91\x09\x29\xc4\x24\x79\xe3\x1c\x8f\x74\x0f\xd6\xf0\xdf\xb0\xee\xe1\x2f\xac\xd6\x05\x42\xd9\x98\x3c\x28\x6b\xfc\x0d\x78\x0b\xbd\x6d\x2e\xb5\x06\xad\x5e\x88\xb7\x76\x68\x82\x64\x6a\x3c\xc1\x54\x16\x58\x07\x77\xda\x36\xc5\x9f\x3c\x40\x39\x2a\x5b\x86\xa8\x80\x45\xa1\x64\x0a\x35\x38\xf2\xb6\x71\x39\x67\xf2\x4d\xbe\x05\x9c\x32\x8e\xd3\x69\x92\x9c\x9d\xc1\x83\x9c\x53\x66\x73\xd2\x45\x92\x3c\x6d\x09\x32\x8c\x90\x64\x25\x83\xdc\x56\x9c\xa4\x10\x66\x54\x96\xc4\x45\xb7\x52\x23\x42\xe7\xb0\xae\xc9\x01\x3a\xdb\xf0\x7a\x90\x83\x13\xad\xe9\xdc\x08\x63\x84\xc6\x45\x51\x4b\x8e\xcb\x6c\xd1\x29\x5c\x6b\x9e\x91\xe0\x5b\xd2\xb5\x9f\xc8\xee\xa1\x72\x28\xa8\x1a\x1d\x54\xad\x0f\x51\x90\x69\x95\xb3\x46\x60\x4b\x3f\xf7\xc8\x8d\x1e\xcc\x4d\x9d\xcf\x38\x62\x31\x13\x72\x33\x1f\x98\xd3\x8c\x09\xb7\x24\xe2\xc7\x72\xd3\xc5\x89\x86\x85\x72\xdc\xa0\x75\x7d\x0a\x4c\x99\x51\x96\xc4\x12\xe6\xac\x75\x60\xd2\x3d\x68\x6b\x5f\x98\x63\x45\x61\x2b\xec\x44\xae\xdb\x24\xc9\xb2\x2c\x39\x0e\xb4\x48\x3e\x76\x3f\x3e\x76\xdf\xf8\x27\x4d\x15\x3c\xfc\xfe\xfe\xf6\xfe\x06\x1f\xbb\xdd\x38\x5d\xa1\x32\x69\x28\x0f\x36\xc6\x0a\x7f\xb3\x53\xd2\x24\x52\x16\xbd\x62\x25\x3c\x0e\x64\x82\xf9\x9c\xfb\x8f\xb9\xa0\xd6\x68\xb2\x53\xb9\xe8\x6b\xa3\x5a\xd4\x34\x18\x4b\x9a\x2f\xad\xd6\xb6\x93\x36\x46\xa5\x6e\x86\x8b\xc0\x9f\x3d\x64\x73\xd6\x27\xbb\x64\x49\xd0\x7b\xbe\x22\x7c\x86\x5e\x6b\xeb\xa3\xeb\x27\xff\x95\xce\x56\x51\xde\x74\x80\x70\x0e\x79\x71\x62\xa8\x45\x2c\xe9\xe2\x02\x26\x67\xc4\xfa\x86\x66\xc4\x6b\x87\xb2\x71\xcd\xbe\xa6\x5c\x95\x8a\x53\xb6\x0a\x07\x4f\xc5\xd6\x32\x28\x35\x6e\x6e\x44\xca\x75\x0f\x05\x95\xc8\xae\x80\x12\xb5\xf6\xb0\xc6\xfc\x05\xec\x20\x69\x36\x2e\xdd\xef\xc3\x66\x82\x85\x8d\x1a\xf8\x22\x96\xf2\xfd\xcc\x54\xd2\x67\x6f\xcd\x70\x15\xf6\xb6\x9a\x3c\x99\x24\x77\xd3\xe5\x3d\x66\x75\x60\x5b\xf6\xcb\xc0\x24\xe2\x99\xa2\xb0\x21\xe6\x2c\x4d\xe7\x57\x8e\x36\x4c\x29\x8b\x11\x96\xff\xfe\x03\xc3\x18\x0c\x56\xb4\x77\x68\xe3\xe7\x1d\xf9\x30\xff\x63\x16\x8f\x31\xcc\x15\x1d\xd6\x1e\x4e\x18\x1d\x9f\x3e\xf5\xf7\x14\xe3\xf3\x79\x59\x39\xab\x69\x88\x32\x3e\x03\x32\x01\xcb\xbf\x1f\x7f\xdd\xfa\xb8\x7c\xb8\xcf\x4e\xdf\x27\xd9\xea\x85\xf9\x2a\xae\xaf\x56\x91\xd9\xa3\x0d\x42\xe9\xbf\xe1\xd9\x0a\x7d\xad\x72\x96\xa2\x07\x43\x03\x0d\x76\x8d\xda\x18\xc8\xce\xaf\x8e\x53\x54\xfd\xe7\xe7\xf5\xed\xf8\x3e\x66\xb2\x7f\x90\x5d\x60\x63\x88\xc5\xce\xc6\xd5\x19\xa0\x56\xdc\x29\x5b\x63\xba\x8d\x45\x9a\xfc\x0c\x00\x00\xff\xff\x45\x5f\xf3\xbd\xc7\x05\x00\x00")

func infraMdBytes() ([]byte, error) {
	return bindataRead(
		_infraMd,
		"infra.md",
	)
}

func infraMd() (*asset, error) {
	bytes, err := infraMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "infra.md", size: 1479, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installationMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x90\xbd\x6a\x2b\x41\x0c\x85\xfb\x79\x0a\x95\xf7\x82\xd9\xed\x5d\x86\x34\x81\x10\x17\x2e\x52\x84\xc0\xc8\x3b\xb2\x77\x60\x2c\x2d\x92\xc6\xeb\x85\x3c\x7c\x26\xfe\x2b\x52\xa7\x51\x21\xd0\xf9\x3e\x9d\xb0\x61\x38\xe2\xb0\xd9\xae\xe0\x35\x73\x3d\xaf\x40\x14\x36\x13\xf1\xd3\xf6\x19\xb4\x32\xf8\x48\xb0\x97\x52\x64\xce\x7c\x58\x87\x10\x63\x0c\x43\xd5\x02\xa3\xfb\x64\xeb\xbe\x57\x9c\xbb\x43\xf6\xb1\xee\xaa\x91\x0e\xc2\x4e\xec\xdd\x20\xc7\x1e\x27\x3a\x5f\xc7\x11\xcd\x49\xfb\xcc\xe6\x58\x4a\x67\x23\x7c\x81\x8d\x97\xac\xf0\x26\x4e\x8d\x82\x0e\x8b\xd4\xe6\xb2\x00\x13\x25\x70\x79\xe0\xa3\xd5\x24\x11\x4e\xa4\x96\x85\x61\x47\x4d\xe6\xe2\x89\xa5\xa5\x32\x7a\x3e\x51\x59\x60\x18\x65\x66\x88\x7d\x35\xed\x8b\x0c\x58\xe2\xfa\x0f\x6d\x9b\xc2\x43\xb9\x75\xf6\x9e\x39\xc9\x6c\xd0\x06\x17\xc1\x04\x1f\xbb\xcc\xa8\xcb\xe7\xbf\x3b\xe9\x4a\xf9\x15\xad\x54\x08\x8d\xec\x7f\x17\xc2\xcb\xbe\x3d\xa0\x84\x69\x81\x1b\x8a\xd2\x0a\xea\x74\x50\x4c\x04\x73\x3b\xbf\xd5\xfd\x73\x79\xdf\x5f\x16\xdf\x01\x00\x00\xff\xff\xfb\xea\x57\x0b\xb5\x01\x00\x00")

func installationMdBytes() ([]byte, error) {
	return bindataRead(
		_installationMd,
		"installation.md",
	)
}

func installationMd() (*asset, error) {
	bytes, err := installationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "installation.md", size: 437, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _invokeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4d\x6f\xa3\x48\x10\x3d\x9b\x5f\x51\xf2\x8c\x34\x97\x01\xdb\x60\xfc\xa5\xbd\xf8\xa3\x47\xf1\xac\x3f\x56\x98\x99\x4b\x14\x29\x6d\x28\x0c\x09\xd0\x2c\xdd\x24\xf1\x66\xfd\xdf\xb7\x1b\x5b\x1b\xd8\x8d\xe5\x44\x93\xa3\xab\xba\x5e\xbd\x7a\xaf\x28\x6b\xe3\x0c\x9f\x80\xc6\x31\x7b\xe4\xb0\x67\x05\x08\x06\x51\xfa\xc0\xee\x11\x82\x22\xf5\x44\xc4\x52\x0e\x41\xce\x12\x10\x21\x82\xc7\x92\x84\xa6\xbe\x1e\x47\x29\x7e\x05\x96\xa9\xb4\xac\xdd\x43\x46\x39\x8f\xd2\x1d\x50\xf8\xbe\x59\xaf\x00\x1f\x30\x15\xc0\x72\xe0\x22\x47\x9a\x28\xd0\x8d\x3b\x9b\xaf\x0c\x4d\xfb\xf4\x09\xc8\x13\x4d\xb2\x18\xb9\xa6\xcd\x8f\x9d\x1e\x23\x11\xb2\x42\x00\x4d\x8f\x95\x23\x4d\xbb\xbd\xbd\xe5\xa1\xf6\x19\xa8\xa2\x77\x22\xe4\xb1\x38\x46\x4f\xe8\x5c\x50\xc1\xd5\x8b\x1a\x40\xa5\x73\xa5\x1e\xbd\x90\x81\x9e\xc2\x97\x67\x68\x3e\xd0\xb8\xc0\xe6\x08\x9a\x2e\xdb\x46\xe5\x3c\x01\xe6\x39\x8a\x26\x1c\xbe\xc0\xdf\xb5\x56\x45\x96\x61\xee\x51\x8e\x5a\xad\x6e\x3d\x99\x83\x7b\x45\xe0\x1b\x71\x1c\xe2\xca\xba\x1a\x8b\x52\x26\x0a\x41\x14\xe3\x99\x09\xfe\x85\x85\xdf\x8e\x4c\x8d\x3b\xce\xd2\x1a\x08\x3d\x0e\xc3\x85\x1f\xa5\xe0\xc5\x51\xb6\x65\x34\xf7\xc1\xa7\x82\x56\x40\xb3\xad\x54\x5c\xe0\x7f\x58\xd3\x42\x84\x75\x46\x27\x0b\xe5\x03\x09\xec\x47\x81\x1c\x58\x39\x93\xe5\xec\x4e\x2a\x79\x1e\x50\x9f\x4a\x4b\x45\xd8\x12\xac\x75\x7a\xfb\xff\x1e\x9b\xd2\x5b\xe5\xfa\x31\xc5\x21\xa1\xf7\xea\x67\x52\xc4\x22\x92\x06\x43\x8e\x7f\x16\xc8\x05\xff\x0a\x3b\x4c\x31\xa7\x42\x65\xd5\x24\xc7\x19\xaf\xb3\x90\xa5\xfb\x9b\xeb\xce\xcd\x19\xc3\x0a\x8e\xb9\xd2\xfd\xf9\x39\xa5\x09\x1e\x0e\x27\xa3\xca\xb2\xf3\x86\x9d\xca\x9a\x33\xb2\x58\x12\x07\x96\xe3\xc5\x7a\x45\x9a\x87\x97\xc4\xf7\x29\x38\x84\xfc\x24\x9b\x6a\x70\xf1\x63\x35\x86\x6f\x0b\xe2\x4e\xaf\x88\x23\x13\x86\x61\xbc\x77\x4c\xb9\xbf\x3e\xc8\x3d\xce\x0a\x51\x4e\xaa\x36\x2c\x47\x9e\xc9\x4f\x08\x21\x66\x3b\xfe\x81\x63\x82\xae\x2b\x44\x6d\xe3\x8e\x1d\x17\x9c\x23\x83\xb9\x3f\x02\xab\x8d\x03\xb3\x47\xbb\x3a\xed\x6d\x6d\xbd\xd3\x41\x5b\x1f\x9a\x76\x5f\xf7\x3a\x76\xd7\xc2\xe1\xb6\x6f\x51\x0f\x7e\x62\xce\xe5\x5a\x8c\xe0\xf3\x62\xec\x92\x8d\xab\x91\xd5\xec\xbd\x20\x9a\x43\xfe\x58\xbf\xbf\x77\x63\x56\xa8\x45\x50\xcd\xdb\x46\xdf\x82\x84\x37\x26\x91\xfc\xae\x7d\x78\x49\x74\xda\x6d\x19\x87\xc6\x12\x13\x96\xef\x61\x13\xfd\x85\x32\x68\x0e\x60\x39\x69\x2c\xe9\x13\x9c\xe2\x3f\x38\xfa\xea\xb1\x0c\xbf\xf8\x38\x5d\x2f\x5c\x79\x07\x9c\xab\xf5\xac\x34\xf8\x15\x81\x82\xf6\xd6\xb4\xbc\x0a\x49\xda\xb6\x24\x67\xbf\x67\xf9\xdd\x81\x47\x6d\x8b\xbe\x41\xa0\xcb\x20\xaf\x0a\x74\xb9\xac\x22\x90\x69\xd8\xbd\x5f\x17\x68\x58\xd7\x67\xec\xac\x17\x63\x98\x90\xe9\xef\x67\xd4\xb1\x3b\xd8\xeb\x57\x18\x0e\x86\xe6\x50\x0f\x6c\xcb\xea\x0f\x30\x68\x07\xdd\xfe\x5b\xd4\xb9\x08\xf2\xba\x3a\x17\xcb\x6a\xeb\x63\x9a\x1f\xad\x4e\x79\xe1\x4f\xd7\xbd\x72\x03\xd4\x89\x82\x50\x88\x8c\x8f\x5a\xad\x9d\xbc\x5d\xc5\xd6\x90\xff\x85\xad\x7d\x84\xb1\xcf\x5b\xe5\x97\xaa\xfd\x13\x00\x00\xff\xff\x92\xe5\xb3\xd7\x4b\x07\x00\x00")

func invokeMdBytes() ([]byte, error) {
	return bindataRead(
		_invokeMd,
		"invoke.md",
	)
}

func invokeMd() (*asset, error) {
	bytes, err := invokeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "invoke.md", size: 1867, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _javaMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x48\x34\x20\x91\xa4\xa7\xbb\x16\x41\x03\x12\xb4\xde\xd8\x73\x17\x07\xc7\x0e\xb6\x43\x0e\xbe\x9e\xcd\x5d\x75\xc5\x4a\xab\x9d\x99\x37\x7b\x87\x37\x7e\xaf\x3e\x73\x66\xac\xa5\x69\x0e\x0b\xcf\xe0\x79\xa1\xad\x05\x75\x94\x8a\xdf\xb4\x66\x3c\x7f\xbc\x62\xc9\x69\xd2\x33\x4e\x8c\xcc\x52\x09\xc1\x51\xf5\x49\xf2\x23\x36\x5f\x47\x48\x08\x70\x5c\x18\x1d\xa3\xf5\x2c\xf0\xd1\x86\xd5\xd1\x75\x37\x25\x38\xa6\x7c\xa5\x6a\x14\x35\x61\x4b\xf9\xeb\x4a\xd8\xdb\x9f\x9a\xa6\x85\x11\xdd\x3a\xd5\x0d\x46\x29\xbb\x69\xa0\xe2\x40\x75\x31\xc3\x54\xc9\x27\xd6\xde\x40\x51\x66\x58\x7d\x70\x7d\xf0\x43\xe9\x8d\x66\xf7\xc0\xe1\xf3\x1d\x2f\x32\x0f\x4e\x6e\x3f\xba\x37\x36\xcd\x9d\xcc\xf2\x97\xa2\x6c\xa5\xd3\x69\xc3\xc5\xd7\x4e\xf2\x23\xad\x4d\x99\xe6\xa1\xf9\x0f\x00\x00\xff\xff\x7a\x6d\x57\xa8\x16\x01\x00\x00")

func javaMdBytes() ([]byte, error) {
	return bindataRead(
		_javaMd,
		"java.md",
	)
}

func javaMd() (*asset, error) {
	bytes, err := javaMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "java.md", size: 278, mode: os.FileMode(420), modTime: time.Unix(1459710048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _linksMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xd0\xcf\x4e\xc4\x20\x10\x06\xf0\x7b\x9f\x02\x6f\x72\x68\xb9\xfb\x02\x7a\xd1\x98\xec\x71\x63\x0c\xb4\x5f\x58\xb4\x14\x32\x33\x74\x57\x9f\x5e\x4a\xfc\x77\xa9\xf1\x42\x32\x99\xf9\xc1\x7c\x74\x5d\xaf\x8e\xb7\x41\xee\x8a\x7b\xba\x3e\x89\x64\xbe\x31\xc6\x07\x39\x15\x37\x8c\x29\x1a\x9b\x71\x69\x87\x56\x84\x9c\x38\x48\xa2\xb7\xcd\xdc\x63\x0a\x25\xfe\x98\xd8\xea\x6f\xd3\x33\x68\x05\xcd\x60\xd6\xca\xcd\xc9\x6f\xe6\x91\xd2\x0b\x46\x51\xb8\xd8\x98\x6b\xeb\xef\x17\x8d\x10\x60\xa2\x65\x01\x99\xe7\x2f\xa3\xd5\xb9\xce\x2a\x4e\x85\x46\xb4\xe5\xd3\xfe\x35\x3e\xf5\x9f\xbb\x97\x45\x42\x84\xca\x76\x7c\xb5\xbe\xb9\x87\x34\x61\x5f\x2e\xb5\xbb\x6f\xaf\x8e\x87\xb9\x56\xea\x20\x56\xca\xaf\x18\x2d\xf9\x84\x75\xb0\xef\x85\x70\x86\xab\xff\x05\x1e\x16\x88\x71\x76\xf2\x18\x78\xf5\xfa\x5f\xe3\xba\xfb\x08\x00\x00\xff\xff\x12\x27\x59\x3f\x9a\x01\x00\x00")

func linksMdBytes() ([]byte, error) {
	return bindataRead(
		_linksMd,
		"links.md",
	)
}

func linksMd() (*asset, error) {
	bytes, err := linksMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "links.md", size: 410, mode: os.FileMode(420), modTime: time.Unix(1471966032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _listMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\x4d\x8b\xdb\x30\x10\x86\xef\xfa\x15\x83\xd3\x63\x9c\xc6\x76\x42\x1b\x41\x21\x3d\xf4\xd6\x63\xef\xc9\x24\x1e\xc7\x2a\xfa\x30\x23\x29\x1f\xff\xbe\x92\x5d\x97\x6e\x58\x58\x58\xd8\x8b\xb1\x34\x33\xaf\x9e\x79\x67\xc4\xf7\x81\xee\xe0\xe3\x30\x38\x0e\x1e\xb4\xf2\x41\xd9\x0b\xb8\x0e\xba\x68\xcf\x41\x39\xeb\x41\x59\xb8\x22\x2b\x17\x3d\xb8\x18\x86\x18\xfc\x12\xce\x91\x99\x6c\xd0\x0f\xe8\xa3\x41\x5b\x76\xac\xc8\xb6\xe9\x18\x88\x8d\xb2\xa8\xff\xa6\x02\xda\x16\x8a\xd0\x25\x01\x5f\xcc\xef\x40\xe7\x38\xa9\x06\xba\x30\xe6\x27\xe0\xa6\x42\x0f\xbf\x88\x19\x53\xc4\xac\x84\x58\x2c\xe0\xc7\x1d\xcd\xa0\xc9\x0b\xf1\x33\x41\x01\x6a\xfd\x1f\x52\x56\x0d\x3d\x29\x86\xb3\xb3\x9d\xba\xc4\x49\x48\x0a\x71\x3c\x1e\x7d\x2f\x3e\x01\xe6\xbe\x72\x3b\x42\x00\x9c\x90\xd3\x17\x80\xa3\x0d\xca\x90\x04\xeb\x5a\xfa\xed\xc7\x3b\x43\xc6\xf1\x43\x42\x55\x7f\x35\xa7\xf1\x26\xa7\x24\x7a\x09\xdb\x29\x83\x9d\x4e\x25\xc8\x56\xe2\xcd\x4b\x85\x46\xca\x7a\xd7\x6c\xd7\x4d\xb5\xfb\xd2\xd4\x1b\x99\xe3\x9f\x35\x9a\x53\x8b\x63\x7e\x9f\xe8\x34\xb1\x4c\x2d\xb6\x74\x5f\x4d\xc7\x31\x82\x5a\xa1\x27\x2f\x67\xfb\xf6\xd7\x66\x99\xcc\x70\xfb\xeb\x26\x63\xa6\xbf\x37\x31\xb7\x55\xfd\x8c\x59\xad\x3f\x9e\xb3\xaa\xb3\xb3\x42\xfc\x1b\x52\x5e\x89\x79\x1f\x5e\xb3\x1d\xca\x72\x9a\xba\xc8\x57\x87\x79\x74\x87\x34\x8a\x6f\xc5\xcc\x38\xc1\xc8\xe8\xcb\x1b\xf9\x50\xd6\x2f\x79\xe7\x1a\x19\x68\xdc\xca\x5c\x5b\x3c\xc9\x25\xcb\xde\x2d\x97\x6a\x8b\xb1\xab\x3f\x01\x00\x00\xff\xff\x7a\x38\xa6\xf1\x05\x03\x00\x00")

func listMdBytes() ([]byte, error) {
	return bindataRead(
		_listMd,
		"list.md",
	)
}

func listMd() (*asset, error) {
	bytes, err := listMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "list.md", size: 773, mode: os.FileMode(420), modTime: time.Unix(1467166413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _logsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\xb1\x8e\xd4\x30\x10\xed\xf3\x15\x4f\x39\x0a\x40\xb7\x27\x51\xd0\xd0\x01\xe2\x2a\x24\x3a\x10\xdd\xce\x25\x93\x8d\x25\xc7\x8e\x3c\x63\xf6\xf2\xf7\x8c\x9d\xdd\x1c\x77\x04\xba\xd8\x9e\xf7\xe6\xbd\x79\x93\xe6\xe3\xcc\x8f\x70\x02\x17\x94\x4f\x89\x94\x7b\x9c\x9d\x8e\xf8\xec\x63\xee\x7f\x90\x76\x23\xbe\xc6\x93\x40\x23\x7e\x39\x3e\x43\x47\x46\xcc\x3a\x67\x45\x1c\x30\xe4\xd0\xa9\x8b\x41\xee\xf0\x69\x41\xcf\x03\x65\xaf\xb5\xc6\x17\xd0\x10\x13\xc8\xfb\xa7\x32\xe3\xb6\xe3\x03\xa3\x77\x32\x7b\x5a\xb8\xbf\x45\x0e\x9e\x45\x10\x83\x11\x27\x4c\x31\xf1\x56\x8f\x40\x13\x0b\xc8\xae\x66\x12\x31\x6d\x26\xe3\x48\x45\x72\xe1\x3f\xde\xe1\x67\xcc\x98\x68\xb1\x2e\x12\x21\x33\x77\x6e\x58\x6a\xff\x3e\x9b\x99\x42\x61\x2a\xd5\x4d\x6c\x06\x71\x1e\x9d\xd9\x29\xaf\xa3\x13\x8d\x69\x29\xc6\x37\x25\x78\x7d\xd1\x5f\xcd\xbe\xc7\xe4\x42\x56\x96\x37\xb7\x20\xd3\xcd\xa6\x9b\x8a\x23\xef\xe3\xd9\x85\x13\x28\xf4\x18\x9c\x57\x4e\xe5\x94\x58\x0a\xf2\xae\x69\x6e\x6e\xf0\xe5\x91\xa6\xd9\x4c\x35\xcd\xf7\x32\xb2\x3f\x27\xb0\xce\xa5\x4c\xd8\xf4\xd4\x39\x91\xe8\x53\xb3\x0f\x4d\x73\x3c\x1e\x65\x6c\x5e\x61\x73\x59\x6e\x2e\x4c\xdb\x50\xdb\x3c\xcf\x9c\x3a\x12\x6e\xab\x90\xd6\x44\x5d\xcf\xdb\xb0\xf7\xc8\xb0\x01\xb1\x41\xd6\x06\xf7\xd5\x59\x89\x40\xc9\xf9\x6b\x86\xd7\xac\xff\x4a\x72\x97\xfc\x30\x3c\xe3\xa2\x4b\x22\xae\xdb\x70\xff\x80\x19\x7f\x7c\x06\x5d\x27\x6b\xa1\x3c\x2c\x16\xbd\xda\x77\x40\xcb\x29\xc5\xd4\xfe\x87\x02\x87\xc3\x0a\x44\x2d\xdd\xad\xb8\xbf\xbc\xd5\x6e\xdf\x56\x77\x5b\x10\x63\xcc\xa9\x6c\x4c\x41\xec\xf7\x39\x88\x0b\x1d\xe3\xdd\x8b\x6b\x29\x37\x95\xd2\xfe\x96\x97\x3b\x5f\xd7\xae\xac\x32\x44\x29\xe9\x9a\x3f\x5a\xca\x3a\xee\xbb\x29\x2f\x6f\x2b\xdd\xef\x00\x00\x00\xff\xff\x6b\xf0\x43\xfc\xa0\x03\x00\x00")

func logsMdBytes() ([]byte, error) {
	return bindataRead(
		_logsMd,
		"logs.md",
	)
}

func logsMd() (*asset, error) {
	bytes, err := logsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "logs.md", size: 928, mode: os.FileMode(420), modTime: time.Unix(1462580160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x91\xcd\xae\xda\x30\x10\x85\xf7\x7e\x8a\x23\xd1\x25\x54\x89\x49\x58\xb0\xef\x1b\x54\x5d\xc7\x75\x06\x32\xaa\x7f\x52\xff\x04\x78\xfb\x3a\x51\x40\xb0\xa0\x57\xf7\xee\xec\x99\x39\xc7\xdf\xf1\x88\x9f\x03\xa1\x53\x23\x5d\x61\x29\x05\xd6\xb1\x83\xf6\xd6\x2a\xd7\x63\x0c\x7e\xe2\x9e\x22\x14\xfe\x66\xd6\x7f\x70\x36\xca\x69\x82\x4a\x48\x45\xe5\x27\x0a\xca\x98\xbb\x0e\x27\x1f\x70\xf3\x39\xe0\x94\x9d\x4e\xec\x5d\xdc\xa2\xe7\x38\x1a\x75\x63\x77\x5e\x24\x2e\xdb\xdf\x14\xe0\x4f\x60\x37\x79\xad\xd6\xa9\xe4\x93\x32\xa0\x2b\xe9\x3c\x57\xd0\xe7\xb0\xb4\x4a\x67\x08\x3e\x25\x53\xf4\x5b\xcc\x48\x14\x82\x0f\x11\x17\x4e\x03\xbb\xc2\x75\xe6\x89\x1c\x12\x5b\xc2\x48\x81\x7d\xff\x5d\x88\xcd\x06\x3f\xae\xca\x8e\x86\xa2\x10\xbf\x98\x2e\x98\x29\xef\x50\x0f\xdc\xd5\x63\xc6\x32\x2a\x26\xc8\x06\x43\xa1\x8f\x47\x21\xba\xae\x8b\x83\xf8\x86\xe7\x6f\x11\x22\x8f\xe5\x09\xad\x22\x09\x3c\xe3\x1f\x51\xcb\x46\x96\xda\x9d\xfa\x88\x43\x2b\xf7\x8d\x8d\xa5\xb6\xf2\x53\x99\xaa\xca\x75\xc1\x9f\x8f\xc2\xf8\xcb\x1b\xb3\x46\x56\x9f\x32\x6b\x17\xde\x35\xe9\xf3\x2e\x1e\xc9\xea\x16\x96\x5d\x4e\xf4\x2e\x1b\x76\xbb\xc8\xf3\x66\xeb\xd6\xfe\x2f\xe7\xe1\x05\xac\x91\xb5\xfc\x62\x48\xb9\x7f\x71\x6a\x65\x55\x7d\x9c\xf0\x5f\x00\x00\x00\xff\xff\x2d\xe5\x07\x32\xab\x02\x00\x00")

func metricsMdBytes() ([]byte, error) {
	return bindataRead(
		_metricsMd,
		"metrics.md",
	)
}

func metricsMd() (*asset, error) {
	bytes, err := metricsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics.md", size: 683, mode: os.FileMode(420), modTime: time.Unix(1459217960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _projectsMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x57\xc1\x72\xd4\x46\x13\xbe\xeb\x29\xba\xc4\x01\x5c\xb5\x96\xb1\x0d\xc5\xcf\xde\xfc\x03\x4e\x9c\x02\xe2\x02\x42\x8e\xab\x59\xa9\xb5\x3b\xb6\x34\xa3\xcc\x8c\x76\xd9\xa2\x48\xa5\xf2\x0c\x1c\x73\xe0\x59\x78\x14\x9e\x24\xdd\x33\x9a\x95\xec\xac\xe1\x10\x93\x2a\x97\x57\xea\xe9\xe9\xee\xf9\xba\xfb\xeb\x51\x72\x02\x69\x6b\xf4\x05\x16\x2e\x05\x69\xc1\x2d\x11\x6a\x61\x16\x68\x1d\x74\x4a\x3a\xd0\x15\x88\xb9\x75\x46\x14\x4e\x6a\x05\x52\xc1\x49\x8b\xef\x32\x38\x81\x7e\x1b\x14\x5a\x59\x69\x9d\x65\xd5\x42\xd7\x35\x06\x4d\x7a\x3b\xf9\xf5\x35\x3c\x17\xcd\xbc\x14\x50\x75\xca\x8b\xed\x04\x84\x2a\x13\x51\xd7\x90\x0b\x32\x74\xef\x70\x2f\x07\xdd\xa2\x11\x7e\x15\x96\x62\x85\x20\x8a\x02\x2d\xc5\xa2\x39\x1c\x8b\xc3\xe6\x2c\x49\xee\xdc\x81\x27\x5a\x55\x72\xd1\x85\x2d\x49\x72\x1e\xe2\x88\x7b\x63\x5c\xd9\x85\xa5\x28\x2a\x59\x23\x07\xcd\xe7\x32\x5a\x3b\x28\xa5\xa1\x45\x6d\x36\x19\xbc\x59\xd2\x81\xbd\x02\x1d\xc1\x09\x49\xee\x4b\xa4\xdf\xda\xd2\x91\x75\xe7\x60\xa3\x3b\x13\xcd\x51\xdc\x16\xd6\x48\x71\x0b\x9b\x94\x58\x89\xae\x26\x97\x95\x36\xe3\xa3\xc9\x8a\x2c\x58\xf2\x50\x66\xf0\x23\x1a\xbc\x4b\x96\x14\xe0\x3b\xd1\xb4\xe4\x85\xa1\xdc\x11\x5d\x89\x05\x21\x2e\xd5\x82\x56\x7b\xc3\x1e\xb9\xb3\x93\x17\x90\x1a\x5d\x63\xca\x90\x41\xda\x60\x43\x61\xa7\xde\x27\xe3\x37\x46\x25\xcf\x73\x36\x98\xbc\x4f\x00\x52\x25\x1a\x4c\xa7\xf4\xab\x4b\x4c\x27\x2c\xa1\xa0\x0a\x23\x5b\xd6\xe6\x85\x97\xb4\x40\x01\x6c\x03\x8b\x05\xe0\x75\xbd\x47\x52\x12\x46\x4d\xc5\xda\x4e\xa5\x68\xa6\xd3\xa3\xc7\xc7\x0f\xef\x1f\x1f\x3e\x7e\x74\x7c\xf4\x60\xca\x1a\x07\xb5\xcf\x6b\xd8\xd2\x47\x36\x85\x87\x87\x47\xc9\x07\x0e\xc6\xe7\xe9\x05\x9d\x44\xb2\xfd\x67\x6a\x25\x8d\x56\x0d\x2a\x67\x93\x64\x2b\xc6\x91\x18\x84\x41\xb0\x5d\xdb\x6a\xe3\xb0\x84\xb5\x74\x4b\x9f\xb3\xfd\x7d\xd2\x82\xaa\x16\x8b\x0c\xfe\xbf\xd9\xe2\x73\x05\x45\x46\x27\x82\xd1\x4b\xc8\x58\x67\xb1\x9c\xc0\x52\xaf\x71\x85\x06\xd6\x4b\x54\xbd\x31\x4a\xba\x6d\xb1\x90\x95\x24\x47\xd1\xd0\xb3\x97\x6f\x77\x18\xdb\x4a\xd7\x92\x00\x9f\x47\xa3\x15\xc1\xcf\xf9\x9a\x8b\xe2\x12\x38\x8d\x57\x9c\x73\x7e\x0a\x61\xd1\x06\xa7\xd6\x89\x85\x4f\xae\xf2\xde\xca\x2e\xb4\x47\xe1\x8b\x38\xb6\x9c\xa5\x94\x65\x70\x4a\x3b\x63\x4e\x7c\xed\x6d\x8b\x95\xac\x18\xda\xd8\xd1\xb9\x1a\xb1\x81\x5a\xeb\x4b\xb0\xba\x41\xb7\x64\xd3\xb5\xbc\x44\x6f\xa6\xa2\xf6\xd3\x6b\x12\x4d\x7d\x49\x24\xf1\x74\x1c\x03\xfa\xe8\xb6\x22\x0e\x25\x48\xb6\x75\x94\x7c\xf9\xf8\xd7\x97\x8f\x7f\xd0\x1f\x9d\xcc\xd0\xdb\x9f\x9f\x3f\x7d\xfe\x04\x83\x74\x7b\xce\x91\xbd\xaf\x68\x0d\x2e\x06\xa5\x8f\xbd\x92\x54\x25\xb1\xc8\x05\xfb\x8c\xa2\x4a\x6b\x2a\x26\xf8\x86\xbf\x1b\x34\x06\x5f\x41\xe1\x1f\x7e\x7c\x51\x9e\x55\x8c\x2b\xa5\x01\x2b\xaa\x09\x0f\x31\xf5\xc6\x2a\x05\x02\x3e\xed\x13\x95\x8e\xeb\x92\x39\x68\x1e\xb0\x95\x94\x16\xae\x98\x58\x82\x8e\x93\x5b\x23\x73\x8e\x87\x9e\x5a\xd9\x32\x47\x7c\xbd\x34\xaf\x25\xe6\xf6\x52\xf2\xdf\x25\xe3\xdf\xa7\x81\xb8\xe1\xf5\xa6\xa1\x16\xba\x24\x3a\x38\x73\xc4\x92\x04\x2e\x35\xbe\x08\x80\x2b\xed\x18\x53\xe1\xfc\xa8\x89\xac\x40\x5d\x1b\xf6\x50\x0e\x7a\xb0\x09\xdc\xd8\x21\x12\x6d\x16\xd4\x7d\xab\x1a\x14\x65\x98\x65\xec\x24\xf4\x5e\x47\xf2\x30\x09\x6c\x9f\xae\x09\x10\x37\x28\x66\xed\x91\xaa\x41\x75\xd7\x87\x11\x9c\x30\x13\xd1\x2e\x5f\x2b\xdb\x63\x86\xd1\x81\x4a\xcc\x59\x85\x37\x13\x31\x30\xbf\xe7\xaa\x6d\xbc\xa1\x7c\x02\x76\x49\xb6\xca\xbe\xd1\xfb\x69\xe5\x23\xb1\x9a\x48\x23\x8c\xb2\x53\x89\x75\x69\xf9\xf1\x0e\x30\x6d\x27\xc9\x4b\xfa\xcf\x96\xd8\x68\x2c\x8c\x38\xa9\x48\x97\x09\x83\x49\x28\xce\xb4\x58\x8d\x2b\x51\x77\xe8\xa9\xc7\xd3\xff\x1b\xa4\x6a\x15\x8e\x46\x07\x1d\x84\xca\x7d\xc5\xb5\xcc\xc3\x59\x5a\x3f\x66\xe7\xe8\xd6\x48\x47\x6f\x22\x17\xf7\xae\x78\x96\xec\x83\xdb\xb4\x38\x85\x9c\x38\x87\xfa\x21\x27\x81\xc1\xdf\x3a\x9e\x6a\x21\xd0\xd1\x34\x49\x92\xa7\xc3\xcb\x37\xc2\x96\x8a\xc2\x6b\x3c\x0c\xa2\xde\xe5\xc7\x1b\x37\x9d\x72\x92\x81\x78\xda\x9f\xac\x17\xb0\xf1\x88\xff\x3d\xbb\x47\x97\x93\x9a\xef\x08\x03\x93\x07\x40\xa4\xb9\xc6\xc6\x57\xe0\xdf\xe9\xf5\x55\x70\x60\x87\xf1\x33\x65\xb5\xd9\xec\x42\xac\xc4\x6c\x06\xf7\x7e\xa2\x5f\xf8\xdf\x9e\x97\xb5\x1b\xb7\xd4\x8a\xa5\xe7\xfe\x09\x8e\xb2\x47\x61\x85\xa7\xed\x85\xe5\x95\x38\x5e\xef\x67\x87\xf7\xc7\x6b\x0f\xb2\xe3\xf1\x32\xbd\x86\xd5\x85\xae\x85\x5a\xf0\x92\x50\x1b\xa0\x69\xc5\x39\xda\x0b\x70\x84\xd1\x3a\xa0\x11\xde\x79\xfe\xeb\x42\x44\xd0\x6f\x15\x17\xa9\x5c\x9f\x0a\x46\x85\xae\x41\x83\xf3\x5e\xf0\x1d\x5d\xf2\xd5\x62\x94\x7a\x5d\x7f\xc7\xbc\xb3\x3f\x2a\x55\x6e\xf3\xab\x6d\xc7\x97\xaf\x7e\x81\xdb\x87\xda\x6d\x42\x72\xae\xe0\xd0\xeb\xdc\x60\xa1\x09\x69\xd5\xe7\x21\xec\x29\xa8\x43\xa8\xcf\xa4\xa8\xb9\xd8\xe1\xf7\x83\x8c\xee\x4f\x07\x23\x69\x06\xbf\x58\xec\x4d\xf9\x49\x74\xb7\x8c\xb3\x88\x38\x8f\xad\x85\x63\x6d\x20\x27\x7b\xb3\xf3\x57\x3f\x9f\x9e\x3d\x7f\x96\xf3\x74\xca\xf7\xf7\xfb\x90\xf2\x1b\x0f\xd3\x73\xc1\xe8\xb6\x35\x40\x49\xcd\x67\xc4\x70\x89\x18\x8d\xb8\x1b\xcd\xe1\x2e\x3b\xe3\xd9\xb8\xa2\x5b\x6b\x60\xc0\xdb\xce\x91\x9e\x33\x81\xe4\x03\x2f\x46\x3e\x4b\x92\xf8\xb4\x4d\x40\xa1\x9b\xb6\x73\xfd\x10\xee\xcd\xfb\x3d\xf6\xca\x8d\x91\x97\x5d\xdc\x9b\xbf\x7f\x9f\xf5\x9f\x0d\x19\x67\xfe\xc3\x87\x19\x49\x4e\x63\x70\x41\x94\x47\xae\x9d\x78\x5e\xbd\x76\x59\xa6\x0b\x72\x2b\xc3\xcd\x3c\xcf\x0e\xb6\x03\xfb\x80\x36\x18\x9b\x13\xc1\x52\x5c\x84\x0c\x6b\xcd\xbc\x2c\x25\x3e\xd4\x34\xaf\x2c\x43\xe6\xd3\x2e\xdf\x11\xd8\x13\x3f\x3a\xf2\x1d\xee\x27\x74\x7f\x94\xc5\x12\xd6\xba\x23\x02\x35\x68\x43\x1e\x21\xed\xcd\xdd\xc8\xa0\xfc\x0d\xa3\xb0\x7c\x1b\x88\xc4\x0e\xc9\x53\x5d\x33\xa7\x5a\xa3\x6c\x45\x9d\x2d\x62\x34\x83\x7b\xe2\xb1\x7c\xa3\x1d\x7d\xb9\xdd\x62\x77\xaf\xda\x62\x08\xe6\xed\xf9\x93\x6b\xb3\xf1\x7b\x56\x91\x77\x9e\x59\x2c\x3a\x23\xdd\xe6\x07\xa3\xbb\x96\x80\x79\x4e\xdf\xad\xec\x36\xca\x61\xe1\x17\xe0\xec\xa9\x1d\xd9\x11\xc6\x88\xcd\x15\x33\xdd\x5c\xa1\x1b\xef\x0f\x82\xdd\xfb\xfe\x0e\x00\x00\xff\xff\x66\x2a\x81\x6d\x63\x0f\x00\x00")

func projectsMdBytes() ([]byte, error) {
	return bindataRead(
		_projectsMd,
		"projects.md",
	)
}

func projectsMd() (*asset, error) {
	bytes, err := projectsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "projects.md", size: 3939, mode: os.FileMode(420), modTime: time.Unix(1467486214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rollbackMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x31\x4e\x03\x31\x10\x45\xfb\x39\xc5\x97\x42\xc9\x22\x05\x89\x26\x1d\x05\x3d\xe2\x02\xac\x71\x66\x59\x0b\xe3\xb1\xc6\x76\x36\x69\x38\x3b\xb6\x96\x6c\x40\x21\x29\xad\x37\xf3\xfe\xf7\xd0\x63\xe4\x3d\x8c\xf7\x32\x25\x1c\xa4\x20\x0b\x54\xbc\xc7\x9b\xb1\x1f\xed\x91\x47\x46\x54\xde\x39\x29\xe9\x16\xa2\x48\x91\xad\x1b\x1c\x6f\xb1\x63\x4d\x4e\x02\x64\x80\xc1\x50\x82\xcd\xf5\x75\x47\xb4\x5a\xe1\x69\x6f\x3e\xa3\xe7\x44\xf4\x52\x65\xff\xb9\xa0\xec\xd9\x24\xde\x10\xf5\x7d\x9f\x46\xba\x81\x69\x55\xf4\x38\x3f\x88\x34\xf2\xd7\xf0\x13\x6e\x8f\xd9\xd7\xb6\xf1\x30\xef\x3f\xb7\x44\x9e\x4e\x6c\x72\x79\x44\xdf\x75\x5b\x3d\x74\x5a\x42\x7f\x51\xb2\x8c\xa0\x9e\x87\xd5\xd6\xba\x44\x5f\xf5\x5a\xce\x24\x64\x4e\xd9\x85\xf7\xd7\x13\x9a\xc1\x06\xb6\xa8\x72\xc8\xb4\x94\xc4\x3d\x5d\x71\x97\x18\x67\x01\xd6\xe7\xf6\x05\xfe\xb2\xad\xcf\x92\xda\x3f\xbf\x03\x00\x00\xff\xff\x78\xc2\x4d\x71\xca\x01\x00\x00")

func rollbackMdBytes() ([]byte, error) {
	return bindataRead(
		_rollbackMd,
		"rollback.md",
	)
}

func rollbackMd() (*asset, error) {
	bytes, err := rollbackMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rollback.md", size: 458, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _shimMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x4e\x04\x21\x10\x45\xf7\x73\x8a\x7f\x80\xb1\xef\xa0\xd1\x85\x89\x19\x93\xb1\x3d\x40\x0d\x54\x03\x06\x28\x42\x41\xdb\xde\x5e\x5a\xd3\x9b\xd9\x56\xbd\xff\xf3\xdf\xe9\xb1\xf0\x86\xae\xac\x20\x5c\xc4\xf2\xf4\xa5\x50\x1f\x12\x16\xa9\xc8\x92\x1f\x32\xb5\xb0\x32\x22\x65\xd7\xc9\x31\xb4\x97\x22\xb5\x4d\x98\x7d\x50\x84\x3d\xb7\x72\xfd\x81\x26\x8a\x11\xa5\x8a\xab\x94\xf0\xed\x83\xf1\xe0\x8d\x4d\x6f\xa3\x3b\xe4\x81\x19\x1f\xa2\xdd\x09\xc3\xaa\x67\x50\xb6\x58\x98\xad\xe2\x8d\xd2\xcd\xd2\x80\x4a\x6f\x68\xbe\x4a\x77\x1e\x1f\xf3\xf3\xeb\xe5\x9f\x3a\x4a\xa5\xb7\x3b\xe2\xfd\x73\x9e\xf0\xc4\x86\x86\x01\x64\x19\xaf\x31\x68\xdc\x5f\xae\x57\xa4\xae\x0d\x37\xde\xe5\xec\x9f\x4d\x14\xe7\x42\x76\xe7\xa1\xd5\x8e\xf0\xe9\x37\x00\x00\xff\xff\x5a\x55\x30\x0a\x01\x01\x00\x00")

func shimMdBytes() ([]byte, error) {
	return bindataRead(
		_shimMd,
		"shim.md",
	)
}

func shimMd() (*asset, error) {
	bytes, err := shimMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "shim.md", size: 257, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _upgradeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe2\x0a\xc9\x48\x55\x48\x48\x2c\x48\xad\x50\x28\x2d\x48\x2f\x4a\x4c\x49\x4d\x50\x48\xce\xcf\xcd\x4d\xcc\x4b\x51\x28\xcf\xcc\xc9\x01\x8a\xa6\x24\x96\xa4\x2a\x54\xe6\x97\x16\x29\x64\xe6\x15\x97\x24\xe6\xe4\x24\x96\x64\xe6\xe7\x29\xe4\xa7\x41\xf4\x69\x18\x6a\x26\x28\x58\x69\xea\x71\x01\x02\x00\x00\xff\xff\x97\x4e\x2a\xdd\x4b\x00\x00\x00")

func upgradeMdBytes() ([]byte, error) {
	return bindataRead(
		_upgradeMd,
		"upgrade.md",
	)
}

func upgradeMd() (*asset, error) {
	bytes, err := upgradeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "upgrade.md", size: 75, mode: os.FileMode(420), modTime: time.Unix(1454345227, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"autocomplete.md": autocompleteMd,
	"aws-credentials.md": awsCredentialsMd,
	"bindata.go": bindataGo,
	"build.md": buildMd,
	"delete.md": deleteMd,
	"deploy.md": deployMd,
	"docs.go": docsGo,
	"docs.md": docsMd,
	"dryrun.md": dryrunMd,
	"env.md": envMd,
	"faq.md": faqMd,
	"functions.md": functionsMd,
	"getting-started.md": gettingStartedMd,
	"hooks.md": hooksMd,
	"ignore.md": ignoreMd,
	"infra.md": infraMd,
	"installation.md": installationMd,
	"invoke.md": invokeMd,
	"java.md": javaMd,
	"links.md": linksMd,
	"list.md": listMd,
	"logs.md": logsMd,
	"metrics.md": metricsMd,
	"projects.md": projectsMd,
	"rollback.md": rollbackMd,
	"shim.md": shimMd,
	"upgrade.md": upgradeMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"autocomplete.md": &bintree{autocompleteMd, map[string]*bintree{}},
	"aws-credentials.md": &bintree{awsCredentialsMd, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
	"build.md": &bintree{buildMd, map[string]*bintree{}},
	"delete.md": &bintree{deleteMd, map[string]*bintree{}},
	"deploy.md": &bintree{deployMd, map[string]*bintree{}},
	"docs.go": &bintree{docsGo, map[string]*bintree{}},
	"docs.md": &bintree{docsMd, map[string]*bintree{}},
	"dryrun.md": &bintree{dryrunMd, map[string]*bintree{}},
	"env.md": &bintree{envMd, map[string]*bintree{}},
	"faq.md": &bintree{faqMd, map[string]*bintree{}},
	"functions.md": &bintree{functionsMd, map[string]*bintree{}},
	"getting-started.md": &bintree{gettingStartedMd, map[string]*bintree{}},
	"hooks.md": &bintree{hooksMd, map[string]*bintree{}},
	"ignore.md": &bintree{ignoreMd, map[string]*bintree{}},
	"infra.md": &bintree{infraMd, map[string]*bintree{}},
	"installation.md": &bintree{installationMd, map[string]*bintree{}},
	"invoke.md": &bintree{invokeMd, map[string]*bintree{}},
	"java.md": &bintree{javaMd, map[string]*bintree{}},
	"links.md": &bintree{linksMd, map[string]*bintree{}},
	"list.md": &bintree{listMd, map[string]*bintree{}},
	"logs.md": &bintree{logsMd, map[string]*bintree{}},
	"metrics.md": &bintree{metricsMd, map[string]*bintree{}},
	"projects.md": &bintree{projectsMd, map[string]*bintree{}},
	"rollback.md": &bintree{rollbackMd, map[string]*bintree{}},
	"shim.md": &bintree{shimMd, map[string]*bintree{}},
	"upgrade.md": &bintree{upgradeMd, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

